{"version":3,"file":"js/main.js","mappings":";;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;;AAEA,MAAM,IAA0C;AAChD;AACA,IAAI,iCAAO,EAAE,oCAAE,OAAO;AAAA;AAAA;AAAA,kGAAC;AACvB,IAAI,KAAK,EASN;AACH,CAAC;AACD;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA,6FAA6F;AAC7F,qGAAqG;AACrG,2GAA2G;AAC3G,4GAA4G;AAC5G,0FAA0F;AAC1F,uFAAuF;AACvF;AACA,+GAA+G;AAC/G,sGAAsG;AACtG;;AAEA;;AAEA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA,gBAAgB,gCAAgC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;;AAEZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC,mBAAmB;AACzD,6BAA6B,uBAAuB;AACpD,qCAAqC,kBAAkB;AACvD,wBAAwB,uBAAuB;AAC/C,yCAAyC,UAAU;AACnD,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;;AAEA,kBAAkB,0BAA0B;AAC5C;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA,gBAAgB,gCAAgC;AAChD;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,aAAa;AAC7B;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA,kBAAkB,OAAO;AACzB,kCAAkC,OAAO;;AAEzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,GAAG;AACvB;AACA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC,kBAAkB,aAAa;AAC/B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B,uBAAuB;AACvB,kCAAkC;AAClC,gDAAgD;AAChD;AACA,YAAY;AACZ;AACA;AACA,gCAAgC;AAChC;AACA,YAAY;AACZ;AACA,sBAAsB;AACtB,wCAAwC,mCAAmC,uBAAuB;AAClG,8BAA8B;AAC9B,YAAY;AACZ;AACA,uCAAuC;AACvC;AACA,YAAY;AACZ;;AAEA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;ACnWD;AACA;;AAEa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,IAAI;AAC5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,kBAAkB;AAC7B,WAAW,YAAY;AACvB,WAAW,SAAS;AACpB,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,YAAY;AACvB,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,QAAQ;AAC5C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7dA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,gEA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AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI,yEAAW;AACf,GAAG;;AAEH;AACA;AACA;AACA,aAAa,aAAa;AAC1B,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,0CAAQ;AACjC;AACA,YAAY;AACZ;AACA,YAAY,uEAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe,QAAQ;AACvB;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM;AACN,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,OAAO;AACpB;AACA;AACA,qBAAqB,4EAAc;AACnC;AACA;;AAEA;AACA;AACA;;AAEA,+DAAe,eAAe,EAAC;;;;;;;;;;;;;ACxT/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,eAAe,QAAQ;AACvB;AACA;AACA,UAAU;AACV;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,eAAe,QAAQ;AACvB;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe,QAAQ;AACvB;AACA;AACA,WAAW;AACX;AACA;;AAEA;;AAEA;AACA,uCAAuC,SAAS;AAChD;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,+DAAe,aAAa,EAAC;;;;;;;;;;;;;;;;;;;;;ACxF7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEuD;AACL;;AAElD;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAAY;;AAE9B;AACA,WAAW,aAAa;AACxB;AACA,WAAW,QAAQ;AACnB,aAAa,aAAa;AAC1B,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB;AACA,WAAW,QAAQ;AACnB,aAAa,aAAa;AAC1B,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA,WAAW,QAAQ;AACnB,aAAa,aAAa;AAC1B,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,SAAS;AACtB;AACA;AACA;AACA,MAAM,uDAAQ;AACd;AACA;;AAEA,EAAE,kDAAG;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,SAAS;AACtB;AACA;AACA;AACA,OAAO,uDAAQ;AACf;AACA;;AAEA,EAAE,qDAAM;;AAER;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,aAAa;AACxB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA,QAAQ,uDAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACkE;;;;;;;;;;;;;;;;;;;ACjJlE;AAC6C;;AAE7C;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,gBAAgB,sDAAO;AACvB;AACA;;AAEA,sCAAsC,sDAAO;AAC7C;AACA;AACA;AACA,uBAAuB,sDAAO;;AAE9B;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA,sCAAsC,sDAAO;AAC7C;AACA;AACA;AACA;AACA,yBAAyB,sDAAO;AAChC;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA,oCAAoC,sDAAO;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEiC;;;;;;;;;;;;;;;;;;AC9Da;;AAE9C;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,QAAQ;AACnB,aAAa,aAAa;AAC1B;AACA;AACA,SAAS,2DAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAE6B;;;;;;;;;;;;;;;;ACrE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAC6B;;;;;;;;;;;;;;;;;;;;ACrB7B;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyE;;;;;;;;;;;;;;;AC9DzE;AACiD;AACmC;;AAEpF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,iBAAiB;AAC9B;AACA;AACA,8BAA8B,0DAAc;;AAE5C;AACA;AACA;AACA;AACA,uBAAuB,oEAAwB,IAAI,cAAc;AACjE;;AAEA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA,MAAM,oEAAwB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,+FAAa;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,+DAAe,eAAe,EAAC;;;;;;;;;;;;;;ACxF/B;AACoF;;AAEpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,cAAc;AACrE,MAAM;AACN,uDAAuD,cAAc;AACrE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,cAAc;AACjE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,+FAAa;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,+DAAe,cAAc,EAAC;;;;;;;;;;;;;;;ACtS9B;AACoG;AAChB;;AAEpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,qBAAqB;AAClC;AACA;AACA,8BAA8B,8GAAc;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,wHAAwB,IAAI,cAAc;;AAEjE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,wHAAwB;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,+FAAa;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,+DAAe,mBAAmB,EAAC;;;;;;;;;;;;;;;ACvJnC;AACiD;AACmC;;AAEpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,gBAAgB;AAC7B;AACA;AACA,8BAA8B,0DAAc;;AAE5C;AACA;AACA;AACA;AACA,uBAAuB,oEAAwB,IAAI,cAAc;AACjE;;AAEA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA,MAAM,oEAAwB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,+FAAa;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,+DAAe,cAAc,EAAC;;;;;;;;;;;;;;;;;;;;;;;;ACjI9B;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAWE;;;;;;;;;;;;;;;;;ACzJF;AACA;AACA;;AAE4F;AACR;AACvB;AACuB;;AAEpF,0BAA0B,+FAAa;;AAEvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,gEAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,iFAAqC;AAC5E;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,0BAA0B,kGAAO;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN,0DAA0D,cAAc;AACxE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA,mBAAmB,4GAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED,+DAAe,UAAU,EAAC;;;;;;;;;;;;;;;ACjJ1B;AACoG;AAChB;;AAEpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,sBAAsB;AACnC;AACA;AACA,8BAA8B,8GAAc;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,cAAc;;AAEtD;AACA;AACA;AACA,MAAM;AACN,0CAA0C,cAAc;AACxD;AACA;;AAEA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA,MAAM,wHAAwB;AAC9B;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA,0CAA0C,cAAc;;AAExD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA,wCAAwC,cAAc;;AAEtD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,+FAAa;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,+DAAe,oBAAoB,EAAC;;;;;;;;;;;;;;;;;;;ACrIpC;AAIqE;AAC0B;AACX;AAC/B;AACA;;AAEgB;AACrE,kBAAkB,iEAAoB;;AAEtC;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA,aAAa,aAAa;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,qGAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD,SAAS;AAC3D;AACA;;AAEA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uDAAuD,SAAS;AAChE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA,6CAA6C,mBAAmB;;AAEhE;AACA;;AAEA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mBAAmB;;AAE9D;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,aAAa;AAC1B;AACA;AACA;AACA,8BAA8B,mEAAuB;AACrD;AACA,KAAK;;AAEL,mCAAmC,mEAAuB;AAC1D;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qDAAqD,mBAAmB;AACxE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA,oBAAoB,mEAAuB;AAC3C;AACA;AACA,KAAK;;AAEL;AACA,qBAAqB,mEAAuB;AAC5C;AACA;AACA,KAAK;;AAEL,iBAAiB,mEAAuB;AACxC;AACA,KAAK;;AAEL,iBAAiB,mEAAuB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,mBAAmB,mEAAuB;AAC1C;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA,kBAAkB,mEAAuB;AACzC;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA,6BAA6B,mEAAuB;AACpD;AACA;AACA;AACA,OAAO;;AAEP,MAAM,mEAAuB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,MAAM,mEAAuB;AAC7B;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA,SAAS,wGAAW;AACpB;AACA;;AAEA,QAAQ,6GAAiB;AACzB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,4DAAgB;AACnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,wGAAW;;AAEjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,4BAA4B,+FAAa;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,+DAAe,WAAW,EAAC;;;;;;;;;;;;;AC7lB3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA,wCAAwC;AACxC;;AAEA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,WAAW;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,uBAAuB;AACpC,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe,SAAS;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,+DAAe,gBAAgB,EAAC;;;;;;;;;;;;;;AClPqD;;AAErF;AACA;AACA;AAC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","sources":["webpack://cfpb-design-system/./node_modules/anchor-js/anchor.js","webpack://cfpb-design-system/./node_modules/ftdomdelegate/lib/delegate.js","webpack://cfpb-design-system/./node_modules/ftdomdelegate/lib/index.js","webpack://cfpb-design-system/./packages/cfpb-icons/src/icons/close.svg","webpack://cfpb-design-system/./docs/assets/js/Tabs.js","webpack://cfpb-design-system/./docs/assets/js/redirect-banner.js","webpack://cfpb-design-system/./docs/assets/js/sidebar.js","webpack://cfpb-design-system/./docs/assets/js/toggle-details.js","webpack://cfpb-design-system/./packages/cfpb-atomic-component/src/components/AtomicComponent.js","webpack://cfpb-design-system/./packages/cfpb-atomic-component/src/mixins/EventObserver.js","webpack://cfpb-design-system/./packages/cfpb-atomic-component/src/utilities/atomic-helpers.js","webpack://cfpb-design-system/./packages/cfpb-atomic-component/src/utilities/data-hook.js","webpack://cfpb-design-system/./packages/cfpb-atomic-component/src/utilities/dom-traverse.js","webpack://cfpb-design-system/./packages/cfpb-atomic-component/src/utilities/media-helpers.js","webpack://cfpb-design-system/./packages/cfpb-atomic-component/src/utilities/standard-type.js","webpack://cfpb-design-system/./packages/cfpb-atomic-component/src/utilities/transition/AlphaTransition.js","webpack://cfpb-design-system/./packages/cfpb-atomic-component/src/utilities/transition/BaseTransition.js","webpack://cfpb-design-system/./packages/cfpb-atomic-component/src/utilities/transition/MaxHeightTransition.js","webpack://cfpb-design-system/./packages/cfpb-atomic-component/src/utilities/transition/MoveTransition.js","webpack://cfpb-design-system/./packages/cfpb-atomic-component/src/utilities/type-checkers.js","webpack://cfpb-design-system/./packages/cfpb-expandables/src/Expandable.js","webpack://cfpb-design-system/./packages/cfpb-expandables/src/ExpandableTransition.js","webpack://cfpb-design-system/./packages/cfpb-forms/src/organisms/Multiselect.js","webpack://cfpb-design-system/./packages/cfpb-forms/src/organisms/MultiselectModel.js","webpack://cfpb-design-system/./packages/cfpb-forms/src/organisms/MultiselectUtils.js","webpack://cfpb-design-system/webpack/bootstrap","webpack://cfpb-design-system/webpack/runtime/define property getters","webpack://cfpb-design-system/webpack/runtime/hasOwnProperty shorthand","webpack://cfpb-design-system/webpack/runtime/make namespace object","webpack://cfpb-design-system/./docs/assets/js/main.js","webpack://cfpb-design-system/./docs/assets/css/main.less?8f8b"],"sourcesContent":["/* eslint-env amd */\n/* globals module:false */\n\n// https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n(function (root, factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.AnchorJS = factory();\n    root.anchors = new root.AnchorJS();\n  }\n}(this, function () {\n  'use strict';\n\n  function AnchorJS(options) {\n    this.options = options || {};\n    this.elements = [];\n\n    /**\n     * Assigns options to the internal options object, and provides defaults.\n     * @param {Object} opts - Options object\n     */\n    function _applyRemainingDefaultOptions(opts) {\n      opts.icon = Object.prototype.hasOwnProperty.call(opts, 'icon') ? opts.icon : '\\uE9CB'; // Accepts characters (and also URLs?), like  '#', '¶', '❡', or '§'.\n      opts.visible = Object.prototype.hasOwnProperty.call(opts, 'visible') ? opts.visible : 'hover'; // Also accepts 'always' & 'touch'\n      opts.placement = Object.prototype.hasOwnProperty.call(opts, 'placement') ? opts.placement : 'right'; // Also accepts 'left'\n      opts.ariaLabel = Object.prototype.hasOwnProperty.call(opts, 'ariaLabel') ? opts.ariaLabel : 'Anchor'; // Accepts any text.\n      opts.class = Object.prototype.hasOwnProperty.call(opts, 'class') ? opts.class : ''; // Accepts any class name.\n      opts.base = Object.prototype.hasOwnProperty.call(opts, 'base') ? opts.base : ''; // Accepts any base URI.\n      // Using Math.floor here will ensure the value is Number-cast and an integer.\n      opts.truncate = Object.prototype.hasOwnProperty.call(opts, 'truncate') ? Math.floor(opts.truncate) : 64; // Accepts any value that can be typecast to a number.\n      opts.titleText = Object.prototype.hasOwnProperty.call(opts, 'titleText') ? opts.titleText : ''; // Accepts any text.\n    }\n\n    _applyRemainingDefaultOptions(this.options);\n\n    /**\n     * Checks to see if this device supports touch. Uses criteria pulled from Modernizr:\n     * https://github.com/Modernizr/Modernizr/blob/da22eb27631fc4957f67607fe6042e85c0a84656/feature-detects/touchevents.js#L40\n     * @return {Boolean} - true if the current device supports touch.\n     */\n    this.isTouchDevice = function() {\n      return Boolean('ontouchstart' in window || window.TouchEvent || window.DocumentTouch && document instanceof DocumentTouch);\n    };\n\n    /**\n     * Add anchor links to page elements.\n     * @param  {String|Array|Nodelist} selector - A CSS selector for targeting the elements you wish to add anchor links\n     *                                            to. Also accepts an array or nodeList containing the relavant elements.\n     * @return {this}                           - The AnchorJS object\n     */\n    this.add = function(selector) {\n      var elements,\n          elsWithIds,\n          idList,\n          elementID,\n          i,\n          index,\n          count,\n          tidyText,\n          newTidyText,\n          anchor,\n          visibleOptionToUse,\n          hrefBase,\n          indexesToDrop = [];\n\n      // We reapply options here because somebody may have overwritten the default options object when setting options.\n      // For example, this overwrites all options but visible:\n      //\n      // anchors.options = { visible: 'always'; }\n      _applyRemainingDefaultOptions(this.options);\n\n      visibleOptionToUse = this.options.visible;\n      if (visibleOptionToUse === 'touch') {\n        visibleOptionToUse = this.isTouchDevice() ? 'always' : 'hover';\n      }\n\n      // Provide a sensible default selector, if none is given.\n      if (!selector) {\n        selector = 'h2, h3, h4, h5, h6';\n      }\n\n      elements = _getElements(selector);\n\n      if (elements.length === 0) {\n        return this;\n      }\n\n      _addBaselineStyles();\n\n      // We produce a list of existing IDs so we don't generate a duplicate.\n      elsWithIds = document.querySelectorAll('[id]');\n      idList = [].map.call(elsWithIds, function(el) {\n        return el.id;\n      });\n\n      for (i = 0; i < elements.length; i++) {\n        if (this.hasAnchorJSLink(elements[i])) {\n          indexesToDrop.push(i);\n          continue;\n        }\n\n        if (elements[i].hasAttribute('id')) {\n          elementID = elements[i].getAttribute('id');\n        } else if (elements[i].hasAttribute('data-anchor-id')) {\n          elementID = elements[i].getAttribute('data-anchor-id');\n        } else {\n          tidyText = this.urlify(elements[i].textContent);\n\n          // Compare our generated ID to existing IDs (and increment it if needed)\n          // before we add it to the page.\n          newTidyText = tidyText;\n          count = 0;\n          do {\n            if (index !== undefined) {\n              newTidyText = tidyText + '-' + count;\n            }\n\n            index = idList.indexOf(newTidyText);\n            count += 1;\n          } while (index !== -1);\n\n          index = undefined;\n          idList.push(newTidyText);\n\n          elements[i].setAttribute('id', newTidyText);\n          elementID = newTidyText;\n        }\n\n        // The following code efficiently builds this DOM structure:\n        // `<a class=\"anchorjs-link ${this.options.class}\"\n        //     aria-label=\"${this.options.ariaLabel}\"\n        //     data-anchorjs-icon=\"${this.options.icon}\"\n        //     title=\"${this.options.titleText}\"\n        //     href=\"this.options.base#${elementID}\">\n        // </a>;`\n        anchor = document.createElement('a');\n        anchor.className = 'anchorjs-link ' + this.options.class;\n        anchor.setAttribute('aria-label', this.options.ariaLabel);\n        anchor.setAttribute('data-anchorjs-icon', this.options.icon);\n        if (this.options.titleText) {\n          anchor.title = this.options.titleText;\n        }\n\n        // Adjust the href if there's a <base> tag. See https://github.com/bryanbraun/anchorjs/issues/98\n        hrefBase = document.querySelector('base') ? window.location.pathname + window.location.search : '';\n        hrefBase = this.options.base || hrefBase;\n        anchor.href = hrefBase + '#' + elementID;\n\n        if (visibleOptionToUse === 'always') {\n          anchor.style.opacity = '1';\n        }\n\n        if (this.options.icon === '\\uE9CB') {\n          anchor.style.font = '1em/1 anchorjs-icons';\n\n          // We set lineHeight = 1 here because the `anchorjs-icons` font family could otherwise affect the\n          // height of the heading. This isn't the case for icons with `placement: left`, so we restore\n          // line-height: inherit in that case, ensuring they remain positioned correctly. For more info,\n          // see https://github.com/bryanbraun/anchorjs/issues/39.\n          if (this.options.placement === 'left') {\n            anchor.style.lineHeight = 'inherit';\n          }\n        }\n\n        if (this.options.placement === 'left') {\n          anchor.style.position = 'absolute';\n          anchor.style.marginLeft = '-1em';\n          anchor.style.paddingRight = '.5em';\n          elements[i].insertBefore(anchor, elements[i].firstChild);\n        } else { // if the option provided is `right` (or anything else).\n          anchor.style.paddingLeft = '.375em';\n          elements[i].appendChild(anchor);\n        }\n      }\n\n      for (i = 0; i < indexesToDrop.length; i++) {\n        elements.splice(indexesToDrop[i] - i, 1);\n      }\n\n      this.elements = this.elements.concat(elements);\n\n      return this;\n    };\n\n    /**\n     * Removes all anchorjs-links from elements targeted by the selector.\n     * @param  {String|Array|Nodelist} selector - A CSS selector string targeting elements with anchor links,\n     *                                            OR a nodeList / array containing the DOM elements.\n     * @return {this}                           - The AnchorJS object\n     */\n    this.remove = function(selector) {\n      var index,\n          domAnchor,\n          elements = _getElements(selector);\n\n      for (var i = 0; i < elements.length; i++) {\n        domAnchor = elements[i].querySelector('.anchorjs-link');\n        if (domAnchor) {\n          // Drop the element from our main list, if it's in there.\n          index = this.elements.indexOf(elements[i]);\n          if (index !== -1) {\n            this.elements.splice(index, 1);\n          }\n\n          // Remove the anchor from the DOM.\n          elements[i].removeChild(domAnchor);\n        }\n      }\n\n      return this;\n    };\n\n    /**\n     * Removes all anchorjs links. Mostly used for tests.\n     */\n    this.removeAll = function() {\n      this.remove(this.elements);\n    };\n\n    /**\n     * Urlify - Refine text so it makes a good ID.\n     *\n     * To do this, we remove apostrophes, replace non-safe characters with hyphens,\n     * remove extra hyphens, truncate, trim hyphens, and make lowercase.\n     *\n     * @param  {String} text - Any text. Usually pulled from the webpage element we are linking to.\n     * @return {String}      - hyphen-delimited text for use in IDs and URLs.\n     */\n    this.urlify = function(text) {\n      // Decode HTML characters such as '&nbsp;' first.\n      var textareaElement = document.createElement('textarea');\n      textareaElement.innerHTML = text;\n      text = textareaElement.value;\n\n      // Regex for finding the non-safe URL characters (many need escaping):\n      //   & +$,:;=?@\"#{}|^~[`%!'<>]./()*\\ (newlines, tabs, backspace, vertical tabs, and non-breaking space)\n      var nonsafeChars = /[& +$,:;=?@\"#{}|^~[`%!'<>\\]./()*\\\\\\n\\t\\b\\v\\u00A0]/g;\n\n      // The reason we include this _applyRemainingDefaultOptions is so urlify can be called independently,\n      // even after setting options. This can be useful for tests or other applications.\n      if (!this.options.truncate) {\n        _applyRemainingDefaultOptions(this.options);\n      }\n\n      // Note: we trim hyphens after truncating because truncating can cause dangling hyphens.\n      // Example string:                      // \" ⚡⚡ Don't forget: URL fragments should be i18n-friendly, hyphenated, short, and clean.\"\n      return text.trim()                      // \"⚡⚡ Don't forget: URL fragments should be i18n-friendly, hyphenated, short, and clean.\"\n        .replace(/'/gi, '')                   // \"⚡⚡ Dont forget: URL fragments should be i18n-friendly, hyphenated, short, and clean.\"\n        .replace(nonsafeChars, '-')           // \"⚡⚡-Dont-forget--URL-fragments-should-be-i18n-friendly--hyphenated--short--and-clean-\"\n        .replace(/-{2,}/g, '-')               // \"⚡⚡-Dont-forget-URL-fragments-should-be-i18n-friendly-hyphenated-short-and-clean-\"\n        .substring(0, this.options.truncate)  // \"⚡⚡-Dont-forget-URL-fragments-should-be-i18n-friendly-hyphenated-\"\n        .replace(/^-+|-+$/gm, '')             // \"⚡⚡-Dont-forget-URL-fragments-should-be-i18n-friendly-hyphenated\"\n        .toLowerCase();                       // \"⚡⚡-dont-forget-url-fragments-should-be-i18n-friendly-hyphenated\"\n    };\n\n    /**\n     * Determines if this element already has an AnchorJS link on it.\n     * Uses this technique: https://stackoverflow.com/a/5898748/1154642\n     * @param    {HTMLElement}  el - a DOM node\n     * @return   {Boolean}     true/false\n     */\n    this.hasAnchorJSLink = function(el) {\n      var hasLeftAnchor = el.firstChild && (' ' + el.firstChild.className + ' ').indexOf(' anchorjs-link ') > -1,\n          hasRightAnchor = el.lastChild && (' ' + el.lastChild.className + ' ').indexOf(' anchorjs-link ') > -1;\n\n      return hasLeftAnchor || hasRightAnchor || false;\n    };\n\n    /**\n     * Turns a selector, nodeList, or array of elements into an array of elements (so we can use array methods).\n     * It also throws errors on any other inputs. Used to handle inputs to .add and .remove.\n     * @param  {String|Array|Nodelist} input - A CSS selector string targeting elements with anchor links,\n     *                                         OR a nodeList / array containing the DOM elements.\n     * @return {Array} - An array containing the elements we want.\n     */\n    function _getElements(input) {\n      var elements;\n      if (typeof input === 'string' || input instanceof String) {\n        // See https://davidwalsh.name/nodelist-array for the technique transforming nodeList -> Array.\n        elements = [].slice.call(document.querySelectorAll(input));\n      // I checked the 'input instanceof NodeList' test in IE9 and modern browsers and it worked for me.\n      } else if (Array.isArray(input) || input instanceof NodeList) {\n        elements = [].slice.call(input);\n      } else {\n        throw new TypeError('The selector provided to AnchorJS was invalid.');\n      }\n\n      return elements;\n    }\n\n    /**\n     * _addBaselineStyles\n     * Adds baseline styles to the page, used by all AnchorJS links irregardless of configuration.\n     */\n    function _addBaselineStyles() {\n      // We don't want to add global baseline styles if they've been added before.\n      if (document.head.querySelector('style.anchorjs') !== null) {\n        return;\n      }\n\n      var style = document.createElement('style'),\n          linkRule =\n          '.anchorjs-link{'                        +\n            'opacity:0;'                           +\n            'text-decoration:none;'                +\n            '-webkit-font-smoothing:antialiased;'  +\n            '-moz-osx-font-smoothing:grayscale'    +\n          '}',\n          hoverRule =\n          ':hover>.anchorjs-link,'                 +\n          '.anchorjs-link:focus{'                  +\n            'opacity:1'                            +\n          '}',\n          anchorjsLinkFontFace =\n          '@font-face{'                            +\n            'font-family:anchorjs-icons;'          + // Icon from icomoon; 10px wide & 10px tall; 2 empty below & 4 above\n            'src:url(data:n/a;base64,AAEAAAALAIAAAwAwT1MvMg8yG2cAAAE4AAAAYGNtYXDp3gC3AAABpAAAAExnYXNwAAAAEAAAA9wAAAAIZ2x5ZlQCcfwAAAH4AAABCGhlYWQHFvHyAAAAvAAAADZoaGVhBnACFwAAAPQAAAAkaG10eASAADEAAAGYAAAADGxvY2EACACEAAAB8AAAAAhtYXhwAAYAVwAAARgAAAAgbmFtZQGOH9cAAAMAAAAAunBvc3QAAwAAAAADvAAAACAAAQAAAAEAAHzE2p9fDzz1AAkEAAAAAADRecUWAAAAANQA6R8AAAAAAoACwAAAAAgAAgAAAAAAAAABAAADwP/AAAACgAAA/9MCrQABAAAAAAAAAAAAAAAAAAAAAwABAAAAAwBVAAIAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAMCQAGQAAUAAAKZAswAAACPApkCzAAAAesAMwEJAAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAQAAg//0DwP/AAEADwABAAAAAAQAAAAAAAAAAAAAAIAAAAAAAAAIAAAACgAAxAAAAAwAAAAMAAAAcAAEAAwAAABwAAwABAAAAHAAEADAAAAAIAAgAAgAAACDpy//9//8AAAAg6cv//f///+EWNwADAAEAAAAAAAAAAAAAAAAACACEAAEAAAAAAAAAAAAAAAAxAAACAAQARAKAAsAAKwBUAAABIiYnJjQ3NzY2MzIWFxYUBwcGIicmNDc3NjQnJiYjIgYHBwYUFxYUBwYGIwciJicmNDc3NjIXFhQHBwYUFxYWMzI2Nzc2NCcmNDc2MhcWFAcHBgYjARQGDAUtLXoWOR8fORYtLTgKGwoKCjgaGg0gEhIgDXoaGgkJBQwHdR85Fi0tOAobCgoKOBoaDSASEiANehoaCQkKGwotLXoWOR8BMwUFLYEuehYXFxYugC44CQkKGwo4GkoaDQ0NDXoaShoKGwoFBe8XFi6ALjgJCQobCjgaShoNDQ0NehpKGgobCgoKLYEuehYXAAAADACWAAEAAAAAAAEACAAAAAEAAAAAAAIAAwAIAAEAAAAAAAMACAAAAAEAAAAAAAQACAAAAAEAAAAAAAUAAQALAAEAAAAAAAYACAAAAAMAAQQJAAEAEAAMAAMAAQQJAAIABgAcAAMAAQQJAAMAEAAMAAMAAQQJAAQAEAAMAAMAAQQJAAUAAgAiAAMAAQQJAAYAEAAMYW5jaG9yanM0MDBAAGEAbgBjAGgAbwByAGoAcwA0ADAAMABAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAH//wAP) format(\"truetype\")' +\n          '}',\n          pseudoElContent =\n          '[data-anchorjs-icon]::after{'           +\n            'content:attr(data-anchorjs-icon)'     +\n          '}',\n          firstStyleEl;\n\n      style.className = 'anchorjs';\n      style.appendChild(document.createTextNode('')); // Necessary for Webkit.\n\n      // We place it in the head with the other style tags, if possible, so as to\n      // not look out of place. We insert before the others so these styles can be\n      // overridden if necessary.\n      firstStyleEl = document.head.querySelector('[rel=\"stylesheet\"],style');\n      if (firstStyleEl === undefined) {\n        document.head.appendChild(style);\n      } else {\n        document.head.insertBefore(style, firstStyleEl);\n      }\n\n      style.sheet.insertRule(linkRule, style.sheet.cssRules.length);\n      style.sheet.insertRule(hoverRule, style.sheet.cssRules.length);\n      style.sheet.insertRule(pseudoElContent, style.sheet.cssRules.length);\n      style.sheet.insertRule(anchorjsLinkFontFace, style.sheet.cssRules.length);\n    }\n  }\n\n  return AnchorJS;\n}));\n","/*jshint browser:true, node:true*/\n/* global HTMLDocument */\n\n'use strict';\n\nmodule.exports = Delegate;\n\n/**\n * DOM event delegator\n *\n * The delegator will listen\n * for events that bubble up\n * to the root node.\n *\n * @constructor\n * @param {Node|string} [root] The root node or a selector string matching the root node\n */\nfunction Delegate(root) {\n\n  /**\n   * Maintain a map of listener\n   * lists, keyed by event name.\n   *\n   * @type Object\n   */\n  this.listenerMap = [{}, {}];\n  if (root) {\n    this.root(root);\n  }\n\n  /** @type function() */\n  this.handle = Delegate.prototype.handle.bind(this);\n\n  // Cache of event listeners removed during an event cycle\n  this._removedListeners = [];\n}\n\n/**\n * Start listening for events\n * on the provided DOM element\n *\n * @param  {Node|string} [root] The root node or a selector string matching the root node\n * @returns {Delegate} This method is chainable\n */\nDelegate.prototype.root = function(root) {\n  var listenerMap = this.listenerMap;\n  var eventType;\n\n  // Remove master event listeners\n  if (this.rootElement) {\n    for (eventType in listenerMap[1]) {\n      if (listenerMap[1].hasOwnProperty(eventType)) {\n        this.rootElement.removeEventListener(eventType, this.handle, true);\n      }\n    }\n    for (eventType in listenerMap[0]) {\n      if (listenerMap[0].hasOwnProperty(eventType)) {\n        this.rootElement.removeEventListener(eventType, this.handle, false);\n      }\n    }\n  }\n\n  // If no root or root is not\n  // a dom node, then remove internal\n  // root reference and exit here\n  if (!root || !root.addEventListener) {\n    if (this.rootElement) {\n      delete this.rootElement;\n    }\n    return this;\n  }\n\n  /**\n   * The root node at which\n   * listeners are attached.\n   *\n   * @type Node\n   */\n  this.rootElement = root;\n\n  // Set up master event listeners\n  for (eventType in listenerMap[1]) {\n    if (listenerMap[1].hasOwnProperty(eventType)) {\n      this.rootElement.addEventListener(eventType, this.handle, true);\n    }\n  }\n  for (eventType in listenerMap[0]) {\n    if (listenerMap[0].hasOwnProperty(eventType)) {\n      this.rootElement.addEventListener(eventType, this.handle, false);\n    }\n  }\n\n  return this;\n};\n\n/**\n * @param {string} eventType\n * @returns boolean\n */\nDelegate.prototype.captureForType = function(eventType) {\n  return ['blur', 'error', 'focus', 'load', 'resize', 'scroll'].indexOf(eventType) !== -1;\n};\n\n/**\n * Attach a handler to one\n * event for all elements\n * that match the selector,\n * now or in the future\n *\n * The handler function receives\n * three arguments: the DOM event\n * object, the node that matched\n * the selector while the event\n * was bubbling and a reference\n * to itself. Within the handler,\n * 'this' is equal to the second\n * argument.\n *\n * The node that actually received\n * the event can be accessed via\n * 'event.target'.\n *\n * @param {string} eventType Listen for these events\n * @param {string|undefined} selector Only handle events on elements matching this selector, if undefined match root element\n * @param {function()} handler Handler function - event data passed here will be in event.data\n * @param {boolean} [useCapture] see 'useCapture' in <https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener>\n * @returns {Delegate} This method is chainable\n */\nDelegate.prototype.on = function(eventType, selector, handler, useCapture) {\n  var root, listenerMap, matcher, matcherParam;\n\n  if (!eventType) {\n    throw new TypeError('Invalid event type: ' + eventType);\n  }\n\n  // handler can be passed as\n  // the second or third argument\n  if (typeof selector === 'function') {\n    useCapture = handler;\n    handler = selector;\n    selector = null;\n  }\n\n  // Fallback to sensible defaults\n  // if useCapture not set\n  if (useCapture === undefined) {\n    useCapture = this.captureForType(eventType);\n  }\n\n  if (typeof handler !== 'function') {\n    throw new TypeError('Handler must be a type of Function');\n  }\n\n  root = this.rootElement;\n  listenerMap = this.listenerMap[useCapture ? 1 : 0];\n\n  // Add master handler for type if not created yet\n  if (!listenerMap[eventType]) {\n    if (root) {\n      root.addEventListener(eventType, this.handle, useCapture);\n    }\n    listenerMap[eventType] = [];\n  }\n\n  if (!selector) {\n    matcherParam = null;\n\n    // COMPLEX - matchesRoot needs to have access to\n    // this.rootElement, so bind the function to this.\n    matcher = matchesRoot.bind(this);\n\n  // Compile a matcher for the given selector\n  } else if (/^[a-z]+$/i.test(selector)) {\n    matcherParam = selector;\n    matcher = matchesTag;\n  } else if (/^#[a-z0-9\\-_]+$/i.test(selector)) {\n    matcherParam = selector.slice(1);\n    matcher = matchesId;\n  } else {\n    matcherParam = selector;\n    matcher = matches;\n  }\n\n  // Add to the list of listeners\n  listenerMap[eventType].push({\n    selector: selector,\n    handler: handler,\n    matcher: matcher,\n    matcherParam: matcherParam\n  });\n\n  return this;\n};\n\n/**\n * Remove an event handler\n * for elements that match\n * the selector, forever\n *\n * @param {string} [eventType] Remove handlers for events matching this type, considering the other parameters\n * @param {string} [selector] If this parameter is omitted, only handlers which match the other two will be removed\n * @param {function()} [handler] If this parameter is omitted, only handlers which match the previous two will be removed\n * @returns {Delegate} This method is chainable\n */\nDelegate.prototype.off = function(eventType, selector, handler, useCapture) {\n  var i, listener, listenerMap, listenerList, singleEventType;\n\n  // Handler can be passed as\n  // the second or third argument\n  if (typeof selector === 'function') {\n    useCapture = handler;\n    handler = selector;\n    selector = null;\n  }\n\n  // If useCapture not set, remove\n  // all event listeners\n  if (useCapture === undefined) {\n    this.off(eventType, selector, handler, true);\n    this.off(eventType, selector, handler, false);\n    return this;\n  }\n\n  listenerMap = this.listenerMap[useCapture ? 1 : 0];\n  if (!eventType) {\n    for (singleEventType in listenerMap) {\n      if (listenerMap.hasOwnProperty(singleEventType)) {\n        this.off(singleEventType, selector, handler);\n      }\n    }\n\n    return this;\n  }\n\n  listenerList = listenerMap[eventType];\n  if (!listenerList || !listenerList.length) {\n    return this;\n  }\n\n  // Remove only parameter matches\n  // if specified\n  for (i = listenerList.length - 1; i >= 0; i--) {\n    listener = listenerList[i];\n\n    if ((!selector || selector === listener.selector) && (!handler || handler === listener.handler)) {\n      this._removedListeners.push(listener);\n      listenerList.splice(i, 1);\n    }\n  }\n\n  // All listeners removed\n  if (!listenerList.length) {\n    delete listenerMap[eventType];\n\n    // Remove the main handler\n    if (this.rootElement) {\n      this.rootElement.removeEventListener(eventType, this.handle, useCapture);\n    }\n  }\n\n  return this;\n};\n\n\n/**\n * Handle an arbitrary event.\n *\n * @param {Event} event\n */\nDelegate.prototype.handle = function(event) {\n  var i, l, type = event.type, root, phase, listener, returned, listenerList = [], target, /** @const */ EVENTIGNORE = 'ftLabsDelegateIgnore';\n\n  if (event[EVENTIGNORE] === true) {\n    return;\n  }\n\n  target = event.target;\n\n  // Hardcode value of Node.TEXT_NODE\n  // as not defined in IE8\n  if (target.nodeType === 3) {\n    target = target.parentNode;\n  }\n\n  // Handle SVG <use> elements in IE\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  }\n\n  root = this.rootElement;\n\n  phase = event.eventPhase || ( event.target !== event.currentTarget ? 3 : 2 );\n  \n  switch (phase) {\n    case 1: //Event.CAPTURING_PHASE:\n      listenerList = this.listenerMap[1][type];\n    break;\n    case 2: //Event.AT_TARGET:\n      if (this.listenerMap[0] && this.listenerMap[0][type]) listenerList = listenerList.concat(this.listenerMap[0][type]);\n      if (this.listenerMap[1] && this.listenerMap[1][type]) listenerList = listenerList.concat(this.listenerMap[1][type]);\n    break;\n    case 3: //Event.BUBBLING_PHASE:\n      listenerList = this.listenerMap[0][type];\n    break;\n  }\n\n  var toFire = [];\n\n  // Need to continuously check\n  // that the specific list is\n  // still populated in case one\n  // of the callbacks actually\n  // causes the list to be destroyed.\n  l = listenerList.length;\n  while (target && l) {\n    for (i = 0; i < l; i++) {\n      listener = listenerList[i];\n\n      // Bail from this loop if\n      // the length changed and\n      // no more listeners are\n      // defined between i and l.\n      if (!listener) {\n        break;\n      }\n\n      if(\n        target.tagName &&\n        [\"button\", \"input\", \"select\", \"textarea\"].indexOf(target.tagName.toLowerCase()) > -1 &&\n        target.hasAttribute(\"disabled\")\n      ) {\n        // Remove things that have previously fired\n        toFire = [];\n      }\n      // Check for match and fire\n      // the event if there's one\n      //\n      // TODO:MCG:20120117: Need a way\n      // to check if event#stopImmediatePropagation\n      // was called. If so, break both loops.\n      else if (listener.matcher.call(target, listener.matcherParam, target)) {\n        toFire.push([event, target, listener]);\n      }\n    }\n\n    // TODO:MCG:20120117: Need a way to\n    // check if event#stopPropagation\n    // was called. If so, break looping\n    // through the DOM. Stop if the\n    // delegation root has been reached\n    if (target === root) {\n      break;\n    }\n\n    l = listenerList.length;\n\n    // Fall back to parentNode since SVG children have no parentElement in IE\n    target = target.parentElement || target.parentNode;\n\n    // Do not traverse up to document root when using parentNode, though\n    if (target instanceof HTMLDocument) {\n      break;\n    }\n  }\n\n  var ret;\n\n  for(i=0; i<toFire.length; i++) {\n    // Has it been removed during while the event function was fired\n    if(this._removedListeners.indexOf(toFire[i][2]) > -1) {\n      continue;\n    }\n    returned = this.fire.apply(this, toFire[i]);\n\n    // Stop propagation to subsequent\n    // callbacks if the callback returned\n    // false\n    if (returned === false) {\n      toFire[i][0][EVENTIGNORE] = true;\n      toFire[i][0].preventDefault();\n      ret = false;\n      break;\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Fire a listener on a target.\n *\n * @param {Event} event\n * @param {Node} target\n * @param {Object} listener\n * @returns {boolean}\n */\nDelegate.prototype.fire = function(event, target, listener) {\n  return listener.handler.call(target, event, target);\n};\n\n/**\n * Check whether an element\n * matches a generic selector.\n *\n * @type function()\n * @param {string} selector A CSS selector\n */\nvar matches = (function(el) {\n  if (!el) return;\n  var p = el.prototype;\n  return (p.matches || p.matchesSelector || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector);\n}(Element));\n\n/**\n * Check whether an element\n * matches a tag selector.\n *\n * Tags are NOT case-sensitive,\n * except in XML (and XML-based\n * languages such as XHTML).\n *\n * @param {string} tagName The tag name to test against\n * @param {Element} element The element to test with\n * @returns boolean\n */\nfunction matchesTag(tagName, element) {\n  return tagName.toLowerCase() === element.tagName.toLowerCase();\n}\n\n/**\n * Check whether an element\n * matches the root.\n *\n * @param {?String} selector In this case this is always passed through as null and not used\n * @param {Element} element The element to test with\n * @returns boolean\n */\nfunction matchesRoot(selector, element) {\n  /*jshint validthis:true*/\n  if (this.rootElement === window) {\n    return (\n      // Match the outer document (dispatched from document)\n      element === document ||\n      // The <html> element (dispatched from document.body or document.documentElement)\n      element === document.documentElement ||\n      // Or the window itself (dispatched from window)\n      element === window\n    );\n  }\n  return this.rootElement === element;\n}\n\n/**\n * Check whether the ID of\n * the element in 'this'\n * matches the given ID.\n *\n * IDs are case-sensitive.\n *\n * @param {string} id The ID to test against\n * @param {Element} element The element to test with\n * @returns boolean\n */\nfunction matchesId(id, element) {\n  return id === element.id;\n}\n\n/**\n * Short hand for off()\n * and root(), ie both\n * with no parameters\n *\n * @return void\n */\nDelegate.prototype.destroy = function() {\n  this.off();\n  this.root();\n};\n","/*jshint browser:true, node:true*/\n\n'use strict';\n\n/**\n * @preserve Create and manage a DOM event delegator.\n *\n * @codingstandard ftlabs-jsv2\n * @copyright The Financial Times Limited [All Rights Reserved]\n * @license MIT License (see LICENSE.txt)\n */\nvar Delegate = require('./delegate');\n\nmodule.exports = function(root) {\n  return new Delegate(root);\n};\n\nmodule.exports.Delegate = Delegate;\n","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"cf-icon-svg\\\" viewBox=\\\"0 0 12 19\\\"><path d=\\\"M11.383 13.644A1.03 1.03 0 0 1 9.928 15.1L6 11.172 2.072 15.1a1.03 1.03 0 1 1-1.455-1.456l3.928-3.928L.617 5.79a1.03 1.03 0 1 1 1.455-1.456L6 8.261l3.928-3.928a1.03 1.03 0 0 1 1.455 1.456L7.455 9.716z\\\"></path></svg>\"","const BASE_CLASS = 'm-tabs';\n\n/**\n * @param {HTMLElement} dom - The HTML DOM node.\n * @returns {Tabs} An instance.\n */\nfunction Tabs(dom) {\n  // DOM references.\n  const _dom = dom;\n  let _tabsItemsDom;\n  let _tabsPanelsDom;\n\n  // Store the current selected tab index.\n  let _selectedTabIndex;\n\n  /**\n   * Change the selected tab index.\n   *\n   * @param {number} index - An index position of the selected tab.\n   * @returns {Tabs} An instance.\n   */\n  function changeTab(index) {\n    // Remove classes from prior selected tab and panel.\n    _tabsItemsDom[_selectedTabIndex].classList.remove(\n      `${BASE_CLASS}_list-item-selected`\n    );\n    _tabsPanelsDom[_selectedTabIndex].classList.add('u-hidden');\n\n    // Store new selected index.\n    _selectedTabIndex = index;\n\n    // Add classes for the new selected tab and panel.\n    _tabsItemsDom[_selectedTabIndex].classList.add(\n      `${BASE_CLASS}_list-item-selected`\n    );\n    _tabsPanelsDom[_selectedTabIndex].classList.remove('u-hidden');\n\n    return this;\n  }\n\n  /**\n   * Initialize the Tabs instance.\n   *\n   * @returns {Tabs} An instance.\n   */\n  function init() {\n    _tabsItemsDom = _dom.querySelectorAll(`.${BASE_CLASS}_list-item`);\n\n    if (_tabsItemsDom.length === 0) {\n      // Bail out because there are no tabs to initialize.\n      return this;\n    }\n\n    // Add events to tab items.\n    _tabsPanelsDom = _dom.querySelectorAll(`.${BASE_CLASS}_panel`);\n    for (let i = 0, len = _tabsItemsDom.length; i < len; i++) {\n      _tabsItemsDom[i].addEventListener('click', (event) => {\n        event.preventDefault();\n        changeTab(i);\n      });\n\n      // Hide panels initially.\n      if (i > 0) {\n        _tabsPanelsDom[i].classList.add('u-hidden');\n      }\n    }\n\n    // Set the default selected tab to index zero.\n    _selectedTabIndex = 0;\n\n    return this;\n  }\n\n  // Attach public events.\n  this.init = init;\n  this.changeTab = changeTab;\n\n  return this;\n}\n\nTabs.BASE_CLASS = BASE_CLASS;\n\nexport default Tabs;\n","/**\n * Retrieve redirect source name and URL.\n *\n * @param {Array} match - Matched URL UTM source.\n * @returns {object} Hash of redirect source's name and URL.\n */\nfunction getSource(match) {\n  const redirectSources = {\n    capitalframework: {\n      name: 'Capital Framework',\n      url: 'https://cfpb.github.io/capital-framework-archive/',\n    },\n    designmanual: {\n      name: 'the CFPB Design Manual',\n      url: 'https://cfpb.github.io/design-manual-archive/',\n    },\n  };\n\n  return redirectSources[match[1]];\n}\n\n/**\n * Populate the redirection banner contents and display the banner.\n *\n * @param {string} sourceName - The source's name.\n * @param {string} sourceUrl - The source's URL\n */\nfunction displayBanner(sourceName, sourceUrl) {\n  const banner = document.querySelector('#redirect-banner');\n  const sourceNames = banner.querySelectorAll(\n    'span[data-redirect=source-name]'\n  );\n  const links = banner.querySelectorAll('a[data-redirect=archive-website]');\n\n  for (let i = 0, len = sourceNames.length; i < len; i++) {\n    sourceNames[i].textContent = sourceName;\n  }\n\n  for (let i = 0, len = links.length; i < len; i++) {\n    links[i].textContent = sourceUrl;\n    links[i].href = sourceUrl;\n  }\n\n  banner.classList.remove('u-hidden');\n}\n\n/**\n * Show redirect banner if we're coming from the now-deprecated\n * Capital Framework or Design Manual websites.\n */\nfunction init() {\n  const locationSearch = window.location.search;\n  if (locationSearch.match(/[?&]utm_medium=redirect([&#]|$)/)) {\n    const match = locationSearch.match(/[?&]utm_source=([^&#]*)/);\n\n    if (match) {\n      const source = getSource(match);\n      if (source) {\n        displayBanner(source.name, source.url);\n      }\n    }\n  }\n}\n\nexport default {\n  init: init,\n};\n","/**\n * Initialize the side navigation script to handle opening the sidebar\n * when the page is resized between mobile and desktop sizes.\n */\nfunction init() {\n  const secondaryNavCat = document.querySelector('.ds-nav-container');\n\n  // First collapse the navigation if in mobile.\n  const windowWidth = window.innerWidth;\n  if (windowWidth < 601) {\n    secondaryNavCat.removeAttribute('open');\n  }\n\n  /**\n   * Test the viewport size and set whether the test passes on the instance.\n   */\n  function handleViewportChange() {\n    // Collapse the navigation if we resize to mobile,\n    // but only if we haven't already.\n    // Otherwise, we're on desktop size, so open the navigation.\n    const innerWidth = window.innerWidth;\n    if (innerWidth === windowWidth) {\n      return;\n    }\n\n    if (innerWidth < 601) {\n      secondaryNavCat.removeAttribute('open');\n    } else {\n      secondaryNavCat.setAttribute('open', 'open');\n    }\n  }\n\n  // Check viewport state on page load.\n  handleViewportChange();\n\n  // Add event listener for checking viewport state on window resize.\n  window.addEventListener('resize', () => {\n    handleViewportChange();\n  });\n}\n\nexport default {\n  init: init,\n};\n","const HIDDEN_CLASS = 'u-hidden';\nconst TOGGLE_ATTRIBUTE = 'data-toggle-details';\nconst STATE_SHOW = 'show';\nconst STATE_HIDE = 'hide';\n\nlet isShowingAllDetails = false;\n\n/**\n * Toggle details for a single variation.\n *\n * @param {HTMLElement} button - Button element that controls the toggling.\n * @param {HTMLElement} document -\n *   Defaults to window.document but overridable for react DOM references.\n * @param {string} [state] -\n *   Optional param to specify whether to force showing or hiding of the details\n *   Value should be either 'show' or 'hide'.\n */\nfunction toggleDetails(button, document = window.document, state) {\n  const container = button.parentNode;\n  const codeEl = document.querySelector(button.getAttribute('href'));\n  const hideCodeBtn = container.querySelector(`[${TOGGLE_ATTRIBUTE}=\"hide\"]`);\n  const showCodeBtn = container.querySelector(`[${TOGGLE_ATTRIBUTE}=\"show\"]`);\n\n  if (typeof state === 'undefined') {\n    if (codeEl && codeEl.classList.contains(HIDDEN_CLASS)) {\n      state = STATE_SHOW;\n    } else {\n      state = STATE_HIDE;\n    }\n  }\n\n  if (state === STATE_SHOW) {\n    codeEl.classList.remove(HIDDEN_CLASS);\n    hideCodeBtn.classList.remove(HIDDEN_CLASS);\n    showCodeBtn.classList.add(HIDDEN_CLASS);\n  } else {\n    codeEl.classList.add(HIDDEN_CLASS);\n    hideCodeBtn.classList.add(HIDDEN_CLASS);\n    showCodeBtn.classList.remove(HIDDEN_CLASS);\n  }\n}\n\n/**\n * Toggle all details for a page.\n *\n * @param {HTMLElement} toggleBtn - The button that called this method.\n */\nfunction toggleAllDetails(toggleBtn) {\n  if (isShowingAllDetails) {\n    toggleBtn.querySelector('.a-btn_text').innerHTML = 'Show all details';\n    toggleBtn.setAttribute('title', 'Show all details');\n    window.localStorage.setItem('toggleState', 'show');\n  } else {\n    toggleBtn.querySelector('.a-btn_text').innerHTML = 'Hide all details';\n    toggleBtn.setAttribute('title', 'Hide all details');\n    window.localStorage.setItem('toggleState', 'hide');\n  }\n\n  const codeEls = document.querySelectorAll('.a-toggle_code');\n  let buttonElm;\n  for (let i = 0, len = codeEls.length; i < len; i++) {\n    buttonElm = codeEls[i].querySelector('button:not(.u-hidden)');\n    toggleDetails(\n      buttonElm,\n      window.document,\n      isShowingAllDetails ? STATE_HIDE : STATE_SHOW\n    );\n  }\n\n  isShowingAllDetails = !isShowingAllDetails;\n}\n\nexport { TOGGLE_ATTRIBUTE, toggleDetails, toggleAllDetails };\n","/* ==========================================================================\n   AtomicComponent\n\n   Base Atomic Component\n\n   Contains code copied from the following with major modifications :\n\n   - Backbone.js ( http://backbonejs.org/docs/backbone.html ).\n   - Marionette ( http://marionettejs.com ).\n\n   ========================================================================== */\n\nimport { instantiateAll, setInitFlag } from '../utilities/atomic-helpers.js';\nimport Delegate from 'ftdomdelegate';\nimport EventObserver from '../mixins/EventObserver.js';\nimport { isFunction } from '../utilities/type-checkers.js';\n\nconst TAG_NAME = 'div';\n\n/**\n * Function as the constrcutor for the AtomicComponent.\n * Sets up initial instance properties and calls\n * necessary methods to properly instantiatie component.\n *\n * @param {HTMLElement} element - The element to set as the base element.\n * @param {object} attributes - Hash of attributes to set on base element.\n */\nfunction AtomicComponent(element, attributes) {\n  this.element = element;\n  this.initializers = [];\n  this.uId = this.uniqueId('ac');\n  Object.assign(this, attributes);\n  this.processModifiers();\n  this.ensureElement();\n  this.setCachedElements();\n  this.initializers.push(this.initialize);\n}\n\n// Public instance Methods and properties.\nObject.assign(AtomicComponent.prototype, new EventObserver(), {\n  /**\n   * Run through and call the component's initializers.\n   *\n   * @returns {AtomicComponent} An instance.\n   */\n  init: function () {\n    this.initializers.forEach(function (func) {\n      if (isFunction(func)) {\n        func.apply(this, arguments);\n      }\n    }, this);\n    this.dispatchEvent('component:initialized');\n\n    return this;\n  },\n\n  /**\n   * Function used to process class modifiers. These should\n   * correspond with BEM modifiers.\n   */\n  processModifiers: function () {\n    if (!this.modifiers) {\n      return;\n    }\n\n    this.modifiers.forEach(function (modifier) {\n      const modifierClass = modifier.ui.base.substring(1);\n      if (this.element.classList.contains(modifierClass)) {\n        if (modifier.initialize) {\n          this.initializers.push(modifier.initialize);\n        }\n        Object.assign(this, modifier);\n      }\n    }, this);\n  },\n\n  /**\n   * Function used to render a template in Single Page Applications.\n   *\n   * @returns {AtomicComponent} An instance.\n   */\n  render: function () {\n    return this;\n  },\n\n  /**\n   * Function used to ensure and set / create the base DOM element.\n   */\n  ensureElement: function () {\n    if (!this.element) {\n      // eslint-disable-line no-negated-condition\n      const attrs = { ...this.attributes };\n      attrs.id = this.id || this.u_id;\n      if (this.className) attrs.class = this.className;\n      this.setElement(document.createElement(TAG_NAME));\n      this.setElementAttributes(attrs);\n    } else {\n      this.setElement(this.element);\n    }\n    setInitFlag(this.element);\n  },\n\n  /**\n   * Function used to set the base DOM element.\n   *\n   * @param {HTMLElement} element - The element to set as the base element.\n   * @returns {AtomicComponent} An instance.\n   */\n  setElement: function (element) {\n    if (this.element) {\n      this.undelegateEvents();\n    }\n    this.element = element;\n    this.delegateEvents();\n\n    return this;\n  },\n\n  // TODO Fix complexity issue\n  /* eslint-disable complexity */\n  /**\n   * Function used to set the cached DOM elements.\n   *\n   * @returns {object} Hash of event names and cached elements.\n   */\n  setCachedElements: function () {\n    const ui = { ...this.ui };\n    let key;\n    let element;\n\n    for (key in ui) {\n      if ({}.hasOwnProperty.call(ui, key)) {\n        element = this.element.querySelectorAll(ui[key]);\n        if (element.length === 1) {\n          ui[key] = element[0];\n        } else if (element.length > 1) {\n          ui[key] = element;\n        } else {\n          ui[key] = null;\n        }\n      }\n    }\n    this.ui = ui;\n\n    return ui;\n  },\n  /* eslint-enable complexity */\n\n  /**\n   * Function used to remove the base element from the DOM\n   * and unbind events.\n   *\n   * @returns {boolean} True if successful in tearing down component.\n   */\n  destroy: function () {\n    if (this.element) {\n      this.element.parentNode.removeChild(this.element);\n      if (this.element.view) delete this.element.view;\n      delete this.element;\n    }\n    this.undelegateEvents();\n    this.dispatchEvent('component:destroyed');\n\n    return true;\n  },\n\n  /**\n   * Function used to set the attributes on an element.\n   *\n   * @param {object} attributes - Hash of attributes to set on base element.\n   */\n  setElementAttributes: function (attributes) {\n    let property;\n\n    for (property in attributes) {\n      if ({}.hasOwnProperty.call(attributes, property)) {\n        this.element.setAttribute(property, attributes[property]);\n      }\n    }\n  },\n\n  // TODO Fix complexity issue\n  /* eslint-disable complexity */\n  /**\n   * Function used to up event delegation on the base element.\n   * Using Dom-delegate library to enable this functionality.\n   *\n   * @param {object} events - Hash of events to bind to the dom element.\n   * @returns {AtomicComponent} An instance.\n   */\n  delegateEvents: function (events) {\n    const delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n    let key;\n    let method;\n    let match;\n\n    events = events || (events = this.events);\n    if (!events) {\n      return this;\n    }\n\n    this.undelegateEvents();\n    this._delegate = new Delegate(this.element);\n    for (key in events) {\n      if ({}.hasOwnProperty.call(events, key)) {\n        method = events[key];\n        if (isFunction(this[method])) {\n          method = this[method];\n        }\n        if (method) {\n          match = key.match(delegateEventSplitter);\n          this.delegate(match[1], match[2], method.bind(this));\n        }\n      }\n    }\n    this.dispatchEvent('component:bound');\n\n    return this;\n  },\n  /* eslint-enable complexity */\n\n  /**\n   * Function used to set the attributes on an element.\n   *\n   * @param {string} eventName - Event in which to listen for.\n   * @param {string} selector - CSS selector.\n   * @param {Function} listener - Callback for event.\n   * @returns {AtomicComponent} An instance.\n   */\n  delegate: function (eventName, selector, listener) {\n    this._delegate.on(eventName, selector, listener);\n\n    return this;\n  },\n\n  /**\n   * Function used to remove events from the base element.\n   *\n   * @returns {AtomicComponent} An instance.\n   */\n  undelegateEvents: function () {\n    if (this._delegate) {\n      this._delegate.destroy();\n    }\n    this.element.removeAttribute('data-js-hook');\n\n    return this;\n  },\n\n  /**\n   * Function used to set the attributes on an element.\n   *\n   * @param {string} prefix - String to use a prefix.\n   * @returns {string} Prefixed unique id string.\n   */\n  uniqueId: function (prefix) {\n    return prefix + '_' + Math.random().toString(36).substr(2, 9);\n  },\n});\n\n// Static Methods\n\n/**\n * Function used to set the attributes on an element.\n * and unbind events.\n *\n * @param {object} attributes - Hash of attributes to set on base element.\n * @returns {Function} Extended child constructor function.\n */\nfunction extend(attributes) {\n  /**\n   * Function used as constructor in order to establish inheritance chain.\n   *\n   * @returns {AtomicComponent} An instance.\n   */\n  function child() {\n    this._super = AtomicComponent.prototype;\n    return AtomicComponent.apply(this, arguments);\n  }\n\n  child.prototype = Object.create(AtomicComponent.prototype);\n  Object.assign(child.prototype, attributes);\n  Object.assign(child, AtomicComponent);\n\n  if (\n    {}.hasOwnProperty.call(attributes, 'ui') &&\n    {}.hasOwnProperty.call(attributes.ui, 'base')\n  ) {\n    child.selector = attributes.ui.base;\n  }\n\n  child.constants = {};\n\n  return child;\n}\n\n/**\n * Function used to instantiate all instances of the particular\n * atomic component on a page.\n *\n * @param {HTMLElement} scope - Where to search for components within.\n * @returns {Array} List of AtomicComponent instances.\n */\nfunction init(scope) {\n  const components = instantiateAll(this.selector, this, scope);\n  return components;\n}\n\n// Set public static methods.\nAtomicComponent.init = init;\nAtomicComponent.extend = extend;\n\nexport default AtomicComponent;\n","/**\n * EventObserver\n *\n * @class\n * @classdesc Used for creating an object\n *   that can be used to dispatch and listen to custom events.\n * @returns {object} An EventObserver instance.\n */\nfunction EventObserver() {\n  // The events registered on this instance.\n  const _events = {};\n\n  /**\n   * Register an event listener.\n   *\n   * @param {string} event - The event name to listen for.\n   * @param {Function} callback - The function called when the event has fired.\n   * @returns {object} The instance this EventObserver instance is decorating.\n   */\n  function addEventListener(event, callback) {\n    if ({}.hasOwnProperty.call(_events, event)) {\n      _events[event].push(callback);\n    } else {\n      _events[event] = [callback];\n    }\n\n    return this;\n  }\n\n  /**\n   * Remove an added event listener.\n   * Must match a call made to addEventListener.\n   *\n   * @param {string} event - The event name to remove.\n   * @param {Function} callback - The function attached to the event.\n   * @returns {object} The instance this EventObserver instance is decorating.\n   */\n  function removeEventListener(event, callback) {\n    if (!{}.hasOwnProperty.call(_events, event)) {\n      return this;\n    }\n\n    const index = _events[event].indexOf(callback);\n    // Check if there are any callbacks associated with a particular event.\n    if (index !== -1) {\n      _events[event].splice(index, 1);\n    }\n\n    return this;\n  }\n\n  /**\n   * Broadcast an event.\n   *\n   * @param {string} event - The type of event to broadcast.\n   * @param {object} options - The event object to pass to the event handler.\n   * @returns {object} The instance this EventObserver instance is decorating.\n   */\n  function dispatchEvent(event, options) {\n    if (!{}.hasOwnProperty.call(_events, event)) {\n      return this;\n    }\n\n    options = options || {};\n\n    const evts = _events[event];\n    for (let i = 0, len = evts.length; i < len; i++) {\n      evts[i].call(this, options);\n    }\n\n    return this;\n  }\n\n  /**\n   * @returns {object} Map of registered events.\n   */\n  function getRegisteredEvents() {\n    return _events;\n  }\n\n  this.addEventListener = addEventListener;\n  this.removeEventListener = removeEventListener;\n  this.dispatchEvent = dispatchEvent;\n  this.getRegisteredEvents = getRegisteredEvents;\n\n  return this;\n}\n\nexport default EventObserver;\n","/* ==========================================================================\n   Atomic Helpers.\n   Utilities for helping validate atomic design element architecture.\n   In descending order of scope, atomic components are:\n   - Page\n   - Template\n   - Organism\n   - Molecule\n   - Atom\n   ========================================================================= */\n\nimport { add, contains, remove } from './data-hook.js';\nimport { STATE_PREFIX } from './standard-type.js';\n\n/**\n * @constant\n * @type {string}\n * @description\n * Flag that gets set on an atomic component after its .init()\n * method has been called. This is used so that an atomic\n * component won't get initialized a second time after it\n * has already been initialized.\n */\nconst INIT_FLAG = STATE_PREFIX + 'atomic_init';\n\n/**\n * @param {HTMLElement} element - The DOM element within which to search for\n *   the atomic element class.\n * @param {string} baseClass - The CSS class name for the atomic element.\n * @returns {HTMLElement} The DOM element for the atomic element.\n * @throws {Error} If DOM element passed into the atomic element is not valid.\n */\nfunction _verifyElementExists(element, baseClass) {\n  if (!element || !element.classList) {\n    const msg =\n      element +\n      ' is not valid. ' +\n      'Check that element is a DOM node with class \"' +\n      baseClass +\n      '\"';\n    throw new Error(msg);\n  }\n\n  return element;\n}\n\n/**\n * @param {HTMLElement} element - The DOM element within which to search\n *   for the atomic element class.\n * @param {string} baseClass - The CSS class name for the atomic element.\n * @returns {HTMLElement} The DOM element for the atomic element.\n * @throws {Error} If baseClass was not found on the element.\n */\nfunction _verifyClassExists(element, baseClass) {\n  const dom = element.classList.contains(baseClass)\n    ? element\n    : element.querySelector('.' + baseClass);\n  if (!dom) {\n    const msg = baseClass + ' not found on or in passed DOM node.';\n    throw new Error(msg);\n  }\n\n  return dom;\n}\n\n/**\n * Check that a particular element passed into the constructor of\n * an atomic component exists and that the correct atomic class\n * is present on the element.\n *\n * @param {HTMLElement} element - The DOM element within which to search\n *   for the atomic element class.\n * @param {string} baseClass - The CSS class name for the atomic element.\n * @returns {HTMLElement} The DOM element for the atomic element.\n * @throws {Error} If DOM element passed into the atomic element is not valid.\n */\nfunction checkDom(element, baseClass) {\n  _verifyElementExists(element, baseClass);\n  const dom = _verifyClassExists(element, baseClass);\n\n  return dom;\n}\n\n/**\n * Set a flag on an atomic component when it is initialized.\n * Use the returned boolean to handle cases where an atomic component\n * is initializing when it has already been initialized elsewhere.\n *\n * @param {HTMLElement} element - The DOM element for the atomic component.\n * @returns {boolean} True if the init data-js-* hook attribute was set,\n *   false otherwise.\n */\nfunction setInitFlag(element) {\n  if (contains(element, INIT_FLAG)) {\n    return false;\n  }\n\n  add(element, INIT_FLAG);\n\n  return true;\n}\n\n/**\n * Remove the initialization flag on an atomic component.\n * This might be used if the DOM of an atomic element is cloned.\n *\n * @param {HTMLElement} element - The DOM element for the atomic component.\n * @returns {boolean} True if the init data-js-* hook attribute was destroyed,\n *   otherwise false if it didn't exist.\n */\nfunction destroyInitFlag(element) {\n  if (!contains(element, INIT_FLAG)) {\n    return false;\n  }\n\n  remove(element, INIT_FLAG);\n\n  return true;\n}\n\n/**\n * @param {string} selector - Selector to search for in the document.\n * @param {Function} Constructor - A constructor function.\n * @param {HTMLElement} [scope] - A dom node in which to query the selector.\n *   If not supplied, it defaults to the `document`.\n * @returns {Array} List of instances that were instantiated.\n */\nfunction instantiateAll(selector, Constructor, scope) {\n  const base = scope || document;\n  const elements = base.querySelectorAll(selector);\n  const insts = [];\n  let inst;\n  let element;\n  for (let i = 0, len = elements.length; i < len; i++) {\n    element = elements[i];\n    if (contains(element, INIT_FLAG) === false) {\n      inst = new Constructor(element);\n      inst.init();\n      insts.push(inst);\n    }\n  }\n  return insts;\n}\n\n// Expose public methods.\nexport { checkDom, destroyInitFlag, instantiateAll, setInitFlag };\n","// Required modules.\nimport { JS_HOOK } from './standard-type.js';\n\n/**\n * @param {HTMLElement} element - DOM element.\n * @param {string} value - Value to add to the element's JS data-* hook.\n * @returns {string} The value that was added.\n * @throws {Error} If supplied value contains a space,\n *   meaning it would be two values, which is likely a typo.\n */\nfunction add(element, value) {\n  if (value.indexOf(' ') !== -1) {\n    const msg = JS_HOOK + ' values cannot contain spaces!';\n    throw new Error(msg);\n  }\n\n  const values = element.getAttribute(JS_HOOK);\n  if (values !== null) {\n    value = values + ' ' + value;\n  }\n  element.setAttribute(JS_HOOK, value);\n\n  return value;\n}\n\n/**\n * @param {HTMLElement} element - DOM element.\n * @param {string} value - Value to remove from the JS data-* hook value.\n * @returns {boolean} True if value was removed, false otherwise.\n */\nfunction remove(element, value) {\n  const values = element.getAttribute(JS_HOOK);\n  const index = values.indexOf(value);\n  const valuesList = values.split(' ');\n  if (index > -1) {\n    valuesList.splice(index, 1);\n    element.setAttribute(JS_HOOK, valuesList.join(' '));\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * @param {HTMLElement} element - DOM element.\n * @param {string} value - Value to check as existing as a JS data-* hook value.\n * @returns {boolean} True if the data-* hook value exists, false otherwise.\n */\nfunction contains(element, value) {\n  if (!element) {\n    return false;\n  }\n  let values = element.getAttribute(JS_HOOK);\n  // If JS data-* hook is not set return immediately.\n  if (!values) {\n    return false;\n  }\n  values = values.split(' ');\n\n  return values.indexOf(value) > -1 ? true : false;\n}\n\nexport { add, contains, remove };\n","import { isString } from './type-checkers.js';\n\n/**\n * Queries for the first match unless an HTMLElement is passed\n *\n * @param {(HTMLElement|string)} expr - An element or selector query string.\n * @param {object} con - The document location to query.\n * @returns {HTMLElement} The element.\n */\nfunction queryOne(expr, con) {\n  return isString(expr) ? (con || document).querySelector(expr) : expr || null;\n}\n\n/**\n * Search for support of the matches() method by looking at\n * browser prefixes.\n *\n * @param {HTMLElement} elem - The element to check\n *   for support of matches() method.\n * @returns {Function} The appropriate matches() method of elem.\n */\nfunction _getMatchesMethod(elem) {\n  return (\n    elem.matches ||\n    elem.webkitMatchesSelector ||\n    elem.mozMatchesSelector ||\n    elem.msMatchesSelector\n  );\n}\n\n/**\n * Traverse the element and its parents (heading toward the document root)\n * until a node is found that matches the provided selector string.\n * Will return itself or the matching ancestor.\n * If no such element exists, it returns null.\n *\n * @param {HTMLElement} elem - A DOM element.\n * @param {string} selector - CSS selector.\n * @returns {HTMLElement} Element or nearest parent node that matches the selector.\n *   Or null, if nothing is found.\n */\nfunction closest(elem, selector) {\n  if ('closest' in elem) {\n    return elem.closest(selector);\n  }\n\n  const matchesSelector = _getMatchesMethod(elem);\n\n  try {\n    let parent = elem;\n    let match;\n    while (parent) {\n      if (matchesSelector.bind(parent)(selector)) {\n        match = parent;\n      } else {\n        parent = parent.parentNode;\n      }\n\n      if (match) {\n        return parent;\n      }\n    }\n  } catch (err) {\n    return null;\n  }\n\n  return null;\n}\n\nexport { queryOne, closest };\n","/* ==========================================================================\n   Media Helpers.\n   Utilities for working with different screen sizes and operating systems.\n   ========================================================================= */\n\n/**\n * Query the browser's user agent string to see if it's on a mobile OS.\n *\n * @returns {boolean} True if on a mobile user agent, false otherwise.\n */\nfunction isMobileUserAgent() {\n  const regex = new RegExp(\n    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i\n  );\n  if (regex.test(navigator.userAgent)) {\n    return true;\n  }\n  return false;\n}\n\n// Expose public methods.\nexport { isMobileUserAgent };\n","/**\n * @constant\n * @type {string}\n * @description\n * Constant for the name of the data-* attribute set on\n * HTML DOM elements for access by JavaScript.\n */\nconst JS_HOOK = 'data-js-hook';\n\n/**\n * @constant\n * @type {string}\n * @description\n * Flag prefix for settings that describe what JavaScript\n * behaviors should be attached to a component.\n * This would be set in the markup and initialized when\n * the JavaScript loads.\n * @example\n * A component may flag that it has certain JavaScript behaviors attached,\n * such as:\n * `data-js-hook=\"behavior_flyout-menu behavior_clearable-input\"`,\n * which defines that two scripts (FlyoutMenu) and (ClearableInput)\n * should access this DOM element and initialize its behaviors.\n */\nconst BEHAVIOR_PREFIX = 'behavior_';\n\n/**\n * @constant\n * @type {string}\n * @description\n * Flag prefix for settings related to changes in a components\n * state set in the data-* JavaScript hook.\n * @example\n * A component may flag that it has been initialized by setting\n * `data-js-hook=\"state_atomic_init\"` after page load.\n * Which specifies that the init method of a atomic constructor\n * has been called, such as\n * `var globalSearch = new GlobalSearch( 'm-global-search' ).init()`.\n */\nconst STATE_PREFIX = 'state_';\n\n/**\n * Empty function that will do nothing.\n * A usecase is when an object has empty functions used for callbacks,\n * which are meant to be overridden with functionality, but if not,\n * noopFunct will fire and do nothing instead.\n *\n * @example\n * callback.onComplete = standardType.noopFunct;\n */\nfunction noopFunct() {\n  // Placeholder function meant to be overridden.\n}\n\n// Bit values intended to be used for bit inversion.\nconst DIRECTIONS = {\n  UP: 0,\n  RIGHT: 1,\n  DOWN: -1,\n  LEFT: -2,\n};\n\nexport { BEHAVIOR_PREFIX, JS_HOOK, noopFunct, STATE_PREFIX, DIRECTIONS };\n","// Required modules.\nimport BaseTransition from './BaseTransition.js';\nimport EventObserver from '@cfpb/cfpb-atomic-component/src/mixins/EventObserver.js';\n\n// Exported constants.\nconst CLASSES = {\n  CSS_PROPERTY: 'opacity',\n  BASE_CLASS: 'u-alpha-transition',\n  ALPHA_100: 'u-alpha-100',\n  ALPHA_0: 'u-alpha-0',\n};\n\n/**\n * AlphaTransition\n *\n * @class\n * @classdesc Initializes new AlphaTransition behavior.\n * @param {HTMLElement} element - DOM element to apply opacity transition to.\n * @returns {AlphaTransition} An instance.\n */\nfunction AlphaTransition(element) {\n  const _baseTransition = new BaseTransition(element, CLASSES);\n\n  /**\n   * Handle the end of a transition.\n   */\n  function _transitionComplete() {\n    this.dispatchEvent(BaseTransition.END_EVENT, { target: this });\n  }\n\n  /**\n   * @returns {AlphaTransition} An instance.\n   */\n  function init() {\n    _baseTransition.init();\n    const _transitionCompleteBinded = _transitionComplete.bind(this);\n    _baseTransition.addEventListener(\n      BaseTransition.END_EVENT,\n      _transitionCompleteBinded\n    );\n    return this;\n  }\n\n  /**\n   * Fade to 100% by applying a utility alpha class.\n   *\n   * @returns {AlphaTransition} An instance.\n   */\n  function fadeIn() {\n    _baseTransition.applyClass(CLASSES.ALPHA_100);\n\n    return this;\n  }\n\n  /**\n   * Fade to nothing by applying a utility alpha class.\n   *\n   * @returns {AlphaTransition} An instance.\n   */\n  function fadeOut() {\n    _baseTransition.applyClass(CLASSES.ALPHA_0);\n\n    return this;\n  }\n\n  // Attach public events.\n  const eventObserver = new EventObserver();\n  this.addEventListener = eventObserver.addEventListener;\n  this.dispatchEvent = eventObserver.dispatchEvent;\n  this.removeEventListener = eventObserver.removeEventListener;\n\n  this.animateOff = _baseTransition.animateOff;\n  this.animateOn = _baseTransition.animateOn;\n  this.halt = _baseTransition.halt;\n  this.isAnimated = _baseTransition.isAnimated;\n  this.remove = _baseTransition.remove;\n  this.setElement = _baseTransition.setElement;\n\n  this.fadeIn = fadeIn;\n  this.fadeOut = fadeOut;\n  this.init = init;\n\n  return this;\n}\n\n// Public static properties.\nAlphaTransition.CLASSES = CLASSES;\n\nexport default AlphaTransition;\n","// Required modules.\nimport EventObserver from '@cfpb/cfpb-atomic-component/src/mixins/EventObserver.js';\n\n// eslint-disable-next-line max-statements\n/**\n * BaseTransition\n *\n * @class\n * @classdesc Initializes new BaseTransition behavior.\n *   This shouldn't be used directly, but instead should be\n *   the base class used through composition by a specific transition.\n * @param {HTMLElement} element - DOM element to apply transition to.\n * @param {object} classes - The classes to apply to this transition.\n * @returns {BaseTransition} An instance.\n */\nfunction BaseTransition(element, classes) {\n  const _classes = classes;\n  let _dom;\n\n  let _lastClass;\n  let _transitionEndEvent;\n  let _transitionCompleteBinded;\n  let _addEventListenerBinded;\n  let _isAnimating = false;\n  let _isFlushed = false;\n\n  // Make sure required attributes are passed in.\n  if (\n    typeof _classes.CSS_PROPERTY === 'undefined' ||\n    typeof _classes.BASE_CLASS === 'undefined'\n  ) {\n    throw new Error(\n      'Transitions require CSS_PROPERTY and BASE_CLASS ' +\n        'to be passed into BaseTransition.'\n    );\n  }\n\n  /**\n   * Add an event listener to the transition, or call the transition\n   * complete handler immediately if transition not supported.\n   */\n  function _addEventListener() {\n    _dom.classList.add(BaseTransition.ANIMATING_CLASS);\n    _isAnimating = true;\n\n    /*\n      If transition is not supported, call handler directly (IE9/OperaMini).\n      Also, if \"transition-duration: 0s\" is set, transitionEnd event will not\n      fire, so we need to call the handler straight away.\n    */\n    if (\n      _transitionEndEvent &&\n      !_dom.classList.contains(BaseTransition.NO_ANIMATION_CLASS)\n    ) {\n      _dom.addEventListener(_transitionEndEvent, _transitionCompleteBinded);\n      this.dispatchEvent(BaseTransition.BEGIN_EVENT, { target: this });\n    } else {\n      this.dispatchEvent(BaseTransition.BEGIN_EVENT, { target: this });\n      _transitionCompleteBinded();\n    }\n  }\n\n  /**\n   * Remove an event listener to the transition.\n   */\n  function _removeEventListener() {\n    _dom.removeEventListener(_transitionEndEvent, _transitionCompleteBinded);\n  }\n\n  /**\n   * Handle the end of a transition.\n   *\n   * @param {TransitionEvent} evt - Transition event object.\n   * @returns {boolean} True if transition was cleaned up,\n   *   false if an outside transitioning property triggered this event handler.\n   */\n  function _transitionComplete(evt) {\n    if (evt && evt.propertyName !== _classes.CSS_PROPERTY) {\n      return false;\n    }\n\n    _removeEventListener();\n    _dom.classList.remove(BaseTransition.ANIMATING_CLASS);\n    this.dispatchEvent(BaseTransition.END_EVENT, { target: this });\n    _isAnimating = false;\n    return true;\n  }\n\n  /**\n   * Search for and remove initial BaseTransition classes that have\n   * already been applied to this BaseTransition's target element.\n   */\n  function _flush() {\n    let prop;\n    for (prop in _classes) {\n      if (\n        {}.hasOwnProperty.call(_classes, prop) &&\n        _classes[prop] !== _classes.BASE_CLASS &&\n        _dom.classList.contains(_classes[prop])\n      ) {\n        _dom.classList.remove(_classes[prop]);\n      }\n    }\n  }\n\n  /**\n   * Halt an in-progress animation and call the complete event immediately.\n   */\n  function halt() {\n    if (!_isAnimating) {\n      return;\n    }\n    _dom.style.webkitTransitionDuration = '0';\n    _dom.style.mozTransitionDuration = '0';\n    _dom.style.oTransitionDuration = '0';\n    _dom.style.transitionDuration = '0';\n    _dom.removeEventListener(_transitionEndEvent, _transitionCompleteBinded);\n    _transitionCompleteBinded();\n    _dom.style.webkitTransitionDuration = '';\n    _dom.style.mozTransitionDuration = '';\n    _dom.style.oTransitionDuration = '';\n    _dom.style.transitionDuration = '';\n  }\n\n  /**\n   * Remove all transition classes, if transition is initialized.\n   *\n   * @returns {boolean}\n   *   True, if the element's CSS classes were touched, false otherwise.\n   */\n  function remove() {\n    if (_dom) {\n      halt();\n      _dom.classList.remove(_classes.BASE_CLASS);\n      _flush();\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Add a \"transition-duration: 0s\" utility CSS class.\n   *\n   * @returns {BaseTransition} An instance.\n   */\n  function animateOn() {\n    if (!_dom) {\n      return this;\n    }\n    _dom.classList.remove(BaseTransition.NO_ANIMATION_CLASS);\n\n    return this;\n  }\n\n  /**\n   * Remove a \"transition-duration: 0s\" utility CSS class.\n   *\n   * @returns {BaseTransition} An instance.\n   */\n  function animateOff() {\n    if (!_dom) {\n      return this;\n    }\n    _dom.classList.add(BaseTransition.NO_ANIMATION_CLASS);\n\n    return this;\n  }\n\n  /**\n   * @param {HTMLElement} elem - The element to check\n   *   for support of transition end event.\n   * @returns {string} The browser-prefixed transition end event.\n   */\n  function _getTransitionEndEvent(elem) {\n    if (!elem) {\n      const msg = 'Element does not have TransitionEnd event. It may be null!';\n      throw new Error(msg);\n    }\n\n    let transition;\n    const transitions = {\n      WebkitTransition: 'webkitTransitionEnd',\n      MozTransition: 'transitionend',\n      OTransition: 'oTransitionEnd otransitionend',\n      transition: 'transitionend',\n    };\n\n    let transitionEvent;\n    for (transitionEvent in transitions) {\n      if (\n        {}.hasOwnProperty.call(transitions, transitionEvent) &&\n        typeof elem.style[transitionEvent] !== 'undefined'\n      ) {\n        transition = transitions[transitionEvent];\n        break;\n      }\n    }\n    return transition;\n  }\n\n  /**\n   * Set the HTML element target of this transition.\n   *\n   * @param {HTMLElement} targetElement - The target of the transition.\n   */\n  function setElement(targetElement) {\n    /*\n      If the element has already been set,\n      clear the transition classes from the old element.\n    */\n    if (_dom) {\n      remove();\n      animateOn();\n    }\n    _dom = targetElement;\n    _dom.classList.add(_classes.BASE_CLASS);\n    _transitionEndEvent = _getTransitionEndEvent(_dom);\n  }\n\n  /**\n   * @returns {BaseTransition} An instance.\n   */\n  function init() {\n    _transitionCompleteBinded = _transitionComplete.bind(this);\n    _addEventListenerBinded = _addEventListener.bind(this);\n    setElement(element);\n\n    return this;\n  }\n\n  /**\n   * @returns {boolean} Whether the transition has a duration or not.\n   *   Returns false if this transition has not been initialized.\n   */\n  function isAnimated() {\n    if (!_dom) {\n      return false;\n    }\n    return !_dom.classList.contains(BaseTransition.NO_ANIMATION_CLASS);\n  }\n\n  /**\n   * @param {string} className - A CSS class.\n   * @returns {boolean} False if the class is already applied\n   *   or the transition is not initialized,\n   *   otherwise true if the class was applied.\n   */\n  function applyClass(className) {\n    if (!_dom) {\n      return false;\n    }\n    if (!_isFlushed) {\n      _flush();\n      _isFlushed = true;\n    }\n\n    if (_dom.classList.contains(className)) {\n      return false;\n    }\n\n    _removeEventListener();\n    _dom.classList.remove(_lastClass);\n    _lastClass = className;\n    _addEventListenerBinded();\n    _dom.classList.add(_lastClass);\n\n    return true;\n  }\n\n  // Attach public events.\n  const eventObserver = new EventObserver();\n  this.addEventListener = eventObserver.addEventListener;\n  this.dispatchEvent = eventObserver.dispatchEvent;\n  this.removeEventListener = eventObserver.removeEventListener;\n\n  this.animateOff = animateOff;\n  this.animateOn = animateOn;\n  this.applyClass = applyClass;\n  this.halt = halt;\n  this.init = init;\n  this.isAnimated = isAnimated;\n  this.remove = remove;\n  this.setElement = setElement;\n\n  return this;\n}\n\n// Public static constants.\nBaseTransition.BEGIN_EVENT = 'transitionBegin';\nBaseTransition.END_EVENT = 'transitionEnd';\nBaseTransition.NO_ANIMATION_CLASS = 'u-no-animation';\nBaseTransition.ANIMATING_CLASS = 'u-is-animating';\n\nexport default BaseTransition;\n","// Required modules.\nimport BaseTransition from '@cfpb/cfpb-atomic-component/src/utilities/transition/BaseTransition.js';\nimport EventObserver from '@cfpb/cfpb-atomic-component/src/mixins/EventObserver.js';\n\n// Exported constants.\nconst CLASSES = {\n  CSS_PROPERTY: 'max-height',\n  BASE_CLASS: 'u-max-height-transition',\n  MH_DEFAULT: 'u-max-height-default',\n  MH_SUMMARY: 'u-max-height-summary',\n  MH_ZERO: 'u-max-height-zero',\n};\n\n/**\n * MoveTransition\n *\n * @class\n * @classdesc Initializes new MoveTransition behavior.\n * @param {HTMLElement} element - DOM element to apply transition to.\n * @returns {MaxHeightTransition} An instance.\n */\nfunction MaxHeightTransition(element) {\n  const _baseTransition = new BaseTransition(element, CLASSES);\n  let previousHeight;\n\n  /**\n   * Refresh the max height set on the element.\n   * This may be useful if resizing the window and the content height changes.\n   */\n  function refresh() {\n    element.style.maxHeight = element.scrollHeight + 'px';\n  }\n\n  /**\n   * Handle the end of a transition.\n   */\n  function _transitionComplete() {\n    this.dispatchEvent(BaseTransition.END_EVENT, { target: this });\n\n    if (element.scrollHeight > previousHeight) {\n      element.style.maxHeight = element.scrollHeight + 'px';\n    }\n  }\n\n  /**\n   * The whole page has loaded,\n   * including all dependent resources such as stylesheets and images.\n   */\n  function _pageLoaded() {\n    window.removeEventListener('load', _pageLoaded);\n    refresh();\n  }\n\n  /**\n   * @returns {MaxHeightTransition} An instance.\n   */\n  function init() {\n    _baseTransition.init();\n\n    /* The scrollHeight of an element may be incorrect if the page hasn't\n       fully loaded yet, so we listen for that to happen before calculating\n       the element max-height. */\n    window.addEventListener('load', _pageLoaded);\n\n    const _transitionCompleteBinded = _transitionComplete.bind(this);\n    _baseTransition.addEventListener(\n      BaseTransition.END_EVENT,\n      _transitionCompleteBinded\n    );\n\n    return this;\n  }\n\n  /**\n   * Reset the max-height to the default size.\n   *\n   * @returns {MaxHeightTransition} An instance.\n   */\n  function maxHeightDefault() {\n    _baseTransition.applyClass(CLASSES.MH_DEFAULT);\n\n    if (!previousHeight || element.scrollHeight > previousHeight) {\n      previousHeight = element.scrollHeight;\n    }\n\n    return this;\n  }\n\n  /**\n   * Collapses the max-height to just a summary height.\n   *\n   * @returns {MaxHeightTransition} An instance.\n   */\n  function maxHeightSummary() {\n    _baseTransition.applyClass(CLASSES.MH_SUMMARY);\n\n    previousHeight = element.scrollHeight;\n\n    return this;\n  }\n\n  /**\n   * Collapses thte max-height completely.\n   *\n   * @returns {MaxHeightTransition} An instance.\n   */\n  function maxHeightZero() {\n    _baseTransition.applyClass(CLASSES.MH_ZERO);\n\n    previousHeight = element.scrollHeight;\n\n    return this;\n  }\n\n  /**\n   * Remove style attribute.\n   * Remove all transition classes, if transition is initialized.\n   *\n   * @returns {boolean}\n   *   True, if the element's CSS classes were touched, false otherwise.\n   */\n  function remove() {\n    element.style.maxHeight = '';\n    return _baseTransition.remove();\n  }\n\n  // Attach public events.\n  const eventObserver = new EventObserver();\n  this.addEventListener = eventObserver.addEventListener;\n  this.dispatchEvent = eventObserver.dispatchEvent;\n  this.removeEventListener = eventObserver.removeEventListener;\n\n  this.animateOff = _baseTransition.animateOff;\n  this.animateOn = _baseTransition.animateOn;\n  this.halt = _baseTransition.halt;\n  this.isAnimated = _baseTransition.isAnimated;\n  this.setElement = _baseTransition.setElement;\n  this.refresh = refresh;\n  this.remove = remove;\n\n  this.init = init;\n  this.maxHeightDefault = maxHeightDefault;\n  this.maxHeightSummary = maxHeightSummary;\n  this.maxHeightZero = maxHeightZero;\n\n  return this;\n}\n\n// Public static properties.\nMaxHeightTransition.CLASSES = CLASSES;\n\nexport default MaxHeightTransition;\n","// Required modules.\nimport BaseTransition from './BaseTransition.js';\nimport EventObserver from '@cfpb/cfpb-atomic-component/src/mixins/EventObserver.js';\n\n// Exported constants.\nconst CLASSES = {\n  CSS_PROPERTY: 'transform',\n  BASE_CLASS: 'u-move-transition',\n  MOVE_TO_ORIGIN: 'u-move-to-origin',\n  MOVE_LEFT: 'u-move-left',\n  MOVE_LEFT_2X: 'u-move-left-2x',\n  MOVE_LEFT_3X: 'u-move-left-3x',\n  MOVE_RIGHT: 'u-move-right',\n  MOVE_UP: 'u-move-up',\n};\n\n/**\n * MoveTransition\n *\n * @class\n * @classdesc Initializes new MoveTransition behavior.\n * @param {HTMLElement} element - DOM element to apply move transition to.\n * @returns {MoveTransition} An instance.\n */\nfunction MoveTransition(element) {\n  const _baseTransition = new BaseTransition(element, CLASSES);\n\n  /**\n   * Handle the end of a transition.\n   */\n  function _transitionComplete() {\n    this.dispatchEvent(BaseTransition.END_EVENT, { target: this });\n  }\n\n  /**\n   * @returns {MoveTransition} An instance.\n   */\n  function init() {\n    _baseTransition.init();\n    const _transitionCompleteBinded = _transitionComplete.bind(this);\n    _baseTransition.addEventListener(\n      BaseTransition.END_EVENT,\n      _transitionCompleteBinded\n    );\n    return this;\n  }\n\n  /**\n   * Move to the element's original coordinates.\n   *\n   * @returns {MoveTransition} An instance.\n   */\n  function moveToOrigin() {\n    _baseTransition.applyClass(CLASSES.MOVE_TO_ORIGIN);\n\n    return this;\n  }\n\n  /**\n   * Move to the left by applying a utility move class.\n   *\n   * @param {number} count - How many times to move left\n   *   as a multiplication of the element's width.\n   * @returns {MoveTransition} An instance.\n   */\n  function moveLeft(count) {\n    count = count || 1;\n    const moveClasses = [\n      CLASSES.MOVE_LEFT,\n      CLASSES.MOVE_LEFT_2X,\n      CLASSES.MOVE_LEFT_3X,\n    ];\n\n    if (count < 1 || count > moveClasses.length) {\n      throw new Error('MoveTransition: moveLeft count is out of range!');\n    }\n\n    _baseTransition.applyClass(moveClasses[count - 1]);\n\n    return this;\n  }\n\n  /**\n   * Move to the right by applying a utility move class.\n   *\n   * @returns {MoveTransition} An instance.\n   */\n  function moveRight() {\n    _baseTransition.applyClass(CLASSES.MOVE_RIGHT);\n\n    return this;\n  }\n\n  /**\n   * Move up by applying a utility move class.\n   *\n   * @returns {MoveTransition} An instance.\n   */\n  function moveUp() {\n    _baseTransition.applyClass(CLASSES.MOVE_UP);\n\n    return this;\n  }\n\n  // Attach public events.\n  const eventObserver = new EventObserver();\n  this.addEventListener = eventObserver.addEventListener;\n  this.dispatchEvent = eventObserver.dispatchEvent;\n  this.removeEventListener = eventObserver.removeEventListener;\n\n  this.animateOff = _baseTransition.animateOff;\n  this.animateOn = _baseTransition.animateOn;\n  this.halt = _baseTransition.halt;\n  this.isAnimated = _baseTransition.isAnimated;\n  this.setElement = _baseTransition.setElement;\n  this.remove = _baseTransition.remove;\n\n  this.init = init;\n  this.moveLeft = moveLeft;\n  this.moveRight = moveRight;\n  this.moveToOrigin = moveToOrigin;\n  this.moveUp = moveUp;\n\n  return this;\n}\n\n// Public static properties.\nMoveTransition.CLASSES = CLASSES;\n\nexport default MoveTransition;\n","/* ==========================================================================\n   Javascript Type Checkers\n\n   Various utility functions to check Javascript types and primitives.\n\n   Contains code copied from with moderate modifications:\n\n   https://github.com/angular/angular.js/blob/master/src/Angular.js.\n   Copyright (c) 2010-2015 Google, Inc. http://angularjs.org\n\n   ========================================================================== */\n\nconst _toString = Object.prototype.toString;\n\n/**\n * @name isUndefined\n * @kind function\n * @description\n * Determines if a reference is undefined.\n * @param {*} value - Reference to check.\n * @returns {boolean} True if `value` is undefined.\n */\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\n/**\n * @name isDefined\n * @kind function\n * @description\n * Determines if a reference is defined.\n * @param {*} value - Reference to check.\n * @returns {boolean} True if `value` is defined.\n */\nfunction isDefined(value) {\n  return typeof value !== 'undefined';\n}\n\n/**\n * @name isObject\n * @kind function\n * @description\n * Determines if a reference is an `Object`.\n * Unlike `typeof` in JavaScript, `null`s are not\n * considered to be objects. Note that JavaScript arrays are objects.\n * @param {*} value - Reference to check.\n * @returns {boolean} True if `value` is an `Object` but not `null`.\n */\nfunction isObject(value) {\n  // http://jsperf.com/isobject4\n  return value !== null && typeof value === 'object';\n}\n\n/**\n * @name isString\n * @kind function\n * @description\n * Determines if a reference is a `String`.\n * @param {*} value - Reference to check.\n * @returns {boolean} True if `value` is a `String`.\n */\nfunction isString(value) {\n  return _toString.call(value) === '[object String]';\n}\n\n/**\n * @name isNumber\n * @kind function\n * @description\n * Determines if a reference is a `Number`.\n *\n * This includes the \"special\" numbers `NaN`, `+Infinity` and `-Infinity`.\n *\n * If you wish to exclude these then you can use the native\n * [`isFinite'](https://developer.mozilla.org/en-US/docs/Web/JavaScript/\n *                      Reference/Global_Objects/isFinite)\n * method.\n * @param {*} value - Reference to check.\n * @returns {boolean} True if `value` is a `Number`.\n */\nfunction isNumber(value) {\n  return _toString.call(value) === '[object Number]';\n}\n\n/**\n * @name isDate\n * @kind function\n * @description\n * Determines if a value is a date.\n * @param {*} value - Reference to check.\n * @returns {boolean} True if `value` is a `Date`.\n */\nfunction isDate(value) {\n  return _toString.call(value) === '[object Date]';\n}\n\n/**\n * @name isArray\n * @kind function\n * @description\n * Determines if a reference is an `Array`.\n * @param {*} value - Reference to check.\n * @returns {boolean} True if `value` is an `Array`.\n */\nconst isArray =\n  Array.isArray ||\n  function isArray(value) {\n    return _toString.call(value) === '[object Array]';\n  };\n\n/**\n * @name isFunction\n * @kind function\n * @description\n * Determines if a reference is a `Function`.\n * @param {*} value - Reference to check.\n * @returns {boolean} True if `value` is a `Function`.\n */\nfunction isFunction(value) {\n  return _toString.call(value) === '[object Function]';\n}\n\n// TODO Fix complexity issue\n/* eslint-disable complexity, no-mixed-operators */\n/**\n * @name isEmpty\n * @kind function\n * @description\n * Determines if a reference is empty.\n * @param {*} value - Reference to check.\n * @returns {boolean} True if `value` is empty.\n */\nfunction isEmpty(value) {\n  return (\n    isUndefined(value) ||\n    value === null ||\n    (isString(value) && value.length <= 0) ||\n    /^\\s*$/.test(value)\n  );\n}\n/* eslint-enable complexity, no-mixed-operators */\n\n// Expose public methods.\nexport {\n  isUndefined,\n  isDefined,\n  isObject,\n  isString,\n  isNumber,\n  isDate,\n  isArray,\n  isFunction,\n  isEmpty,\n};\n","/* ==========================================================================\n   Expandable Organism\n   ========================================================================== */\n\nimport AtomicComponent from '@cfpb/cfpb-atomic-component/src/components/AtomicComponent.js';\nimport EventObserver from '@cfpb/cfpb-atomic-component/src/mixins/EventObserver.js';\nimport ExpandableTransition from './ExpandableTransition.js';\nimport { closest } from '@cfpb/cfpb-atomic-component/src/utilities/dom-traverse.js';\n\nconst eventObserver = new EventObserver();\n\n/**\n * Event handler for when an expandable begins expanding.\n */\nfunction expandBeginHandler() {\n  this.ui.content.classList.remove('u-hidden');\n}\n\n/**\n * Event handler for when an expandable is finished collapsing.\n */\nfunction collapseEndHandler() {\n  this.ui.content.classList.add('u-hidden');\n}\n\n/**\n * Event handler for when an accordion is activated\n */\nfunction _accordionActivatedHandler() {\n  if (this.activeAccordion) {\n    this.transition.toggleExpandable();\n    this.toggleTargetState(this.ui.target);\n    this.activeAccordion = false;\n  }\n}\n\n/**\n * Initialize a new expandable.\n */\nfunction initialize() {\n  const transition = new ExpandableTransition(this.ui.content);\n  this.transition = transition.init();\n  this.transition.addEventListener(\n    'expandBegin',\n    expandBeginHandler.bind(this)\n  );\n  this.transition.addEventListener(\n    'collapseEnd',\n    collapseEndHandler.bind(this)\n  );\n\n  if (\n    this.ui.content.classList.contains(ExpandableTransition.CLASSES.EXPANDED)\n  ) {\n    this.ui.target.classList.add(this.classes.targetExpanded);\n  } else {\n    this.ui.target.classList.add(this.classes.targetCollapsed);\n    this.ui.content.classList.add('u-hidden');\n  }\n\n  const expandableGroup = closest(this.ui.target, '.' + this.classes.group);\n\n  this.isAccordionGroup =\n    expandableGroup !== null &&\n    expandableGroup.classList.contains(this.classes.groupAccordion);\n\n  if (this.isAccordionGroup) {\n    eventObserver.addEventListener(\n      'accordionActivated',\n      _accordionActivatedHandler.bind(this)\n    );\n  }\n}\n\n/**\n * Event handler for when an expandable is clicked.\n */\nfunction expandableClickHandler() {\n  this.transition.toggleExpandable();\n  this.toggleTargetState(this.ui.target);\n\n  if (this.isAccordionGroup) {\n    if (this.activeAccordion) {\n      this.activeAccordion = false;\n    } else {\n      eventObserver.dispatchEvent('accordionActivated', { target: this });\n      this.activeAccordion = true;\n    }\n  }\n}\n\n/**\n * Toggle an expandable to open or closed.\n *\n * @param {HTMLElement} element - The expandable target HTML DOM element.\n */\nfunction toggleTargetState(element) {\n  if (element.classList.contains(this.classes.targetExpanded)) {\n    this.ui.target.classList.add(this.classes.targetCollapsed);\n    this.ui.target.classList.remove(this.classes.targetExpanded);\n  } else {\n    this.ui.target.classList.add(this.classes.targetExpanded);\n    this.ui.target.classList.remove(this.classes.targetCollapsed);\n  }\n}\n\n/**\n * Retrieve the label text of the expandable header.\n *\n * @returns {string} The text of the expandable's label.\n */\nfunction getLabelText() {\n  return this.ui.label.textContent.trim();\n}\n\nconst Expandable = AtomicComponent.extend({\n  ui: {\n    base: '.o-expandable',\n    target: '.o-expandable_target',\n    content: '.o-expandable_content',\n    header: '.o-expandable_header',\n    label: '.o-expandable_label',\n  },\n\n  classes: {\n    targetExpanded: 'o-expandable_target__expanded',\n    targetCollapsed: 'o-expandable_target__collapsed',\n    group: 'o-expandable-group',\n    groupAccordion: 'o-expandable-group__accordion',\n  },\n\n  events: {\n    'click .o-expandable_target': 'expandableClickHandler',\n  },\n\n  transition: null,\n  isAccordionGroup: false,\n  activeAccordion: false,\n\n  initialize: initialize,\n  expandableClickHandler: expandableClickHandler,\n  toggleTargetState: toggleTargetState,\n  getLabelText: getLabelText,\n});\n\nexport default Expandable;\n","// Required modules.\nimport BaseTransition from '@cfpb/cfpb-atomic-component/src/utilities/transition/BaseTransition.js';\nimport EventObserver from '@cfpb/cfpb-atomic-component/src/mixins/EventObserver.js';\n\n// Exported constants.\nconst CLASSES = {\n  CSS_PROPERTY: 'max-height',\n  BASE_CLASS: 'o-expandable_content__transition',\n  EXPANDED: 'o-expandable_content__expanded',\n  COLLAPSED: 'o-expandable_content__collapsed',\n  OPEN_DEFAULT: 'o-expandable_content__onload-open',\n};\n\n/* eslint-disable max-lines-per-function */\n/**\n * ExpandableTransition\n *\n * @class\n * @classdesc Initializes new ExpandableTransition behavior.\n * @param {HTMLElement} element - DOM element to apply move transition to.\n * @returns {ExpandableTransition} An instance.\n */\nfunction ExpandableTransition(element) {\n  const _baseTransition = new BaseTransition(element, CLASSES);\n  let previousHeight;\n\n  /**\n   * Handle the end of a transition.\n   */\n  function _transitionComplete() {\n    if (element.classList.contains(CLASSES.EXPANDED)) {\n      this.dispatchEvent('expandEnd', { target: this });\n\n      if (element.scrollHeight > previousHeight) {\n        element.style.maxHeight = element.scrollHeight + 'px';\n      }\n    } else if (element.classList.contains(CLASSES.COLLAPSED)) {\n      this.dispatchEvent('collapseEnd', { target: this });\n    }\n  }\n\n  /**\n   * @returns {ExpandableTransition} An instance.\n   */\n  function init() {\n    _baseTransition.init();\n    _baseTransition.addEventListener(\n      BaseTransition.END_EVENT,\n      _transitionComplete.bind(this)\n    );\n\n    if (element.classList.contains(CLASSES.OPEN_DEFAULT)) {\n      this.expand();\n    } else {\n      this.collapse();\n    }\n\n    return this;\n  }\n\n  /**\n   * Toggle the expandable\n   *\n   * @returns {ExpandableTransition} An instance.\n   */\n  function toggleExpandable() {\n    if (element.classList.contains(CLASSES.COLLAPSED)) {\n      this.expand();\n    } else {\n      this.collapse();\n    }\n\n    return this;\n  }\n\n  /**\n   * Collapses the expandable content\n   *\n   * @returns {ExpandableTransition} An instance.\n   */\n  function collapse() {\n    this.dispatchEvent('collapseBegin', { target: this });\n\n    previousHeight = element.scrollHeight;\n    element.style.maxHeight = '0';\n    _baseTransition.applyClass(CLASSES.COLLAPSED);\n\n    return this;\n  }\n\n  /**\n   * Expands the expandable content\n   *\n   * @returns {ExpandableTransition} An instance.\n   */\n  function expand() {\n    this.dispatchEvent('expandBegin', { target: this });\n\n    if (!previousHeight || element.scrollHeight > previousHeight) {\n      previousHeight = element.scrollHeight;\n    }\n\n    element.style.maxHeight = previousHeight + 'px';\n    _baseTransition.applyClass(CLASSES.EXPANDED);\n\n    return this;\n  }\n\n  // Attach public events.\n  const eventObserver = new EventObserver();\n  this.addEventListener = eventObserver.addEventListener;\n  this.dispatchEvent = eventObserver.dispatchEvent;\n  this.removeEventListener = eventObserver.removeEventListener;\n\n  this.animateOff = _baseTransition.animateOff;\n  this.animateOn = _baseTransition.animateOn;\n  this.halt = _baseTransition.halt;\n  this.isAnimated = _baseTransition.isAnimated;\n  this.setElement = _baseTransition.setElement;\n  this.remove = _baseTransition.remove;\n\n  this.init = init;\n  this.toggleExpandable = toggleExpandable;\n  this.collapse = collapse;\n  this.expand = expand;\n\n  return this;\n}\n/* eslint-enable max-lines-per-function */\n\n// Public static properties.\nExpandableTransition.CLASSES = CLASSES;\n\nexport default ExpandableTransition;\n","// Required modules.\nimport {\n  checkDom,\n  setInitFlag,\n} from '@cfpb/cfpb-atomic-component/src/utilities/atomic-helpers.js';\nimport { isMobileUserAgent } from '@cfpb/cfpb-atomic-component/src/utilities/media-helpers.js';\nimport EventObserver from '@cfpb/cfpb-atomic-component/src/mixins/EventObserver.js';\nimport MultiselectModel from './MultiselectModel.js';\nimport MultiselectUtils from './MultiselectUtils.js';\n\nimport * as closeIconSrc from '@cfpb/cfpb-icons/src/icons/close.svg';\nconst closeIcon = closeIconSrc.default;\n\nconst BASE_CLASS = 'o-multiselect';\n\n/**\n * Multiselect\n *\n * @class\n * @classdesc Initializes a new Multiselect molecule.\n * @param {HTMLElement} element - The DOM element within which to search\n *   for the molecule.\n * @returns {Multiselect} An instance.\n */\nfunction Multiselect(element) {\n  // eslint-disable-line max-statements\n\n  const CHECKBOX_INPUT_CLASS = 'a-checkbox';\n  const TEXT_INPUT_CLASS = 'a-text-input';\n\n  /* TODO: As the multiselect is developed further\n     explore whether it should use an updated\n     class name or data-* attribute in the\n     markup so that it doesn't apply globally by default. */\n  element.classList.add(BASE_CLASS);\n\n  // Constants for direction.\n  const DIR_PREV = 'prev';\n  const DIR_NEXT = 'next';\n\n  // Constants for key binding.\n  const KEY_RETURN = 13;\n  const KEY_SPACE = 32;\n  const KEY_ESCAPE = 27;\n  const KEY_UP = 38;\n  const KEY_DOWN = 40;\n  const KEY_TAB = 9;\n\n  // Internal vars.\n  let _dom = checkDom(element, BASE_CLASS);\n  let _isBlurSkipped = false;\n  let _name;\n  let _placeholder;\n  let _model;\n  let _options;\n\n  // Markup elems, conver this to templating engine in the future.\n  let _containerDom;\n  let _selectionsDom;\n  let _headerDom;\n  let _searchDom;\n  let _fieldsetDom;\n  let _optionsDom;\n  const _optionItemDoms = [];\n  let _instance;\n\n  /**\n   * Set the filtered matched state.\n   */\n  function _filterMatches() {\n    _optionsDom.classList.remove('u-no-results');\n    _optionsDom.classList.add('u-filtered');\n\n    let filteredIndices = _model.getLastFilterIndices();\n    for (let i = 0, len = filteredIndices.length; i < len; i++) {\n      _optionItemDoms[filteredIndices[i]].classList.remove('u-filter-match');\n    }\n\n    filteredIndices = _model.getFilterIndices();\n    for (let j = 0, len = filteredIndices.length; j < len; j++) {\n      _optionItemDoms[filteredIndices[j]].classList.add('u-filter-match');\n    }\n  }\n\n  /**\n   * Resets the filtered option list.\n   */\n  function _resetFilter() {\n    _optionsDom.classList.remove('u-filtered', 'u-no-results');\n\n    for (let i = 0, len = _optionsDom.children.length; i < len; i++) {\n      _optionsDom.children[i].classList.remove('u-filter-match');\n    }\n\n    _model.clearFilter();\n  }\n\n  /**\n   * Updates the list of options to show the user there\n   * are no matching results.\n   */\n  function _filterNoMatches() {\n    _optionsDom.classList.add('u-no-results');\n    _optionsDom.classList.remove('u-filtered');\n  }\n\n  /**\n   * Filter the options list.\n   * Every time we filter we have two lists of indices:\n   * - The matching options (filterIndices).\n   * - The matching options of the last filter (_lastFilterIndices).\n   * We need to turn off the filter for any of the last filter matches\n   * that are not in the new set, and turn on the filter for the matches\n   * that are not in the last set.\n   *\n   * @param {Array} filterIndices - List of indices to filter from the options.\n   * @returns {boolean} True if options are filtered, false otherwise.\n   */\n  function _filterList(filterIndices) {\n    if (filterIndices.length > 0) {\n      _filterMatches();\n      return true;\n    }\n\n    _filterNoMatches();\n    return false;\n  }\n\n  /**\n   * Evaluates the list of options based on the user's query in the\n   * search input.\n   *\n   * @param {string} value - Text the user has entered in the search query.\n   */\n  function _evaluate(value) {\n    _resetFilter();\n    _model.resetIndex();\n    const matchedIndices = _model.filterIndices(value);\n    _filterList(matchedIndices);\n  }\n\n  /**\n   * Expand the multiselect drop down.\n   *\n   * @returns {Multiselect} An instance.\n   */\n  function expand() {\n    _containerDom.classList.add('u-active');\n    _fieldsetDom.classList.remove('u-invisible');\n    _fieldsetDom.setAttribute('aria-hidden', false);\n    _instance.dispatchEvent('expandBegin', { target: _instance });\n\n    return _instance;\n  }\n\n  /**\n   * Collapse the multiselect drop down.\n   *\n   * @returns {Multiselect} An instance.\n   */\n  function collapse() {\n    _containerDom.classList.remove('u-active');\n    _fieldsetDom.classList.add('u-invisible');\n    _fieldsetDom.setAttribute('aria-hidden', true);\n    _model.resetIndex();\n    // TODO: This should be collapseBegin, not expandEnd, but we have a dependency on this event in the filters in cf.gov.\n    _instance.dispatchEvent('expandEnd', { target: _instance });\n\n    return _instance;\n  }\n\n  /**\n   * Highlights an option in the list.\n   *\n   * @param {string} direction - Direction to highlight compared to the\n   *                           current focus.\n   */\n  function _highlight(direction) {\n    if (direction === DIR_NEXT) {\n      _model.setIndex(_model.getIndex() + 1);\n    } else if (direction === DIR_PREV) {\n      _model.setIndex(_model.getIndex() - 1);\n    }\n\n    const index = _model.getIndex();\n    if (index > -1) {\n      let filteredIndex = index;\n      const filterIndices = _model.getFilterIndices();\n      if (filterIndices.length > 0) {\n        filteredIndex = filterIndices[index];\n      }\n      const option = _model.getOption(filteredIndex);\n      const value = option.value;\n      const item = _optionsDom.querySelector('[data-option=\"' + value + '\"]');\n      const input = item.querySelector('input');\n\n      _isBlurSkipped = true;\n      input.focus();\n    } else {\n      _isBlurSkipped = false;\n      _searchDom.focus();\n    }\n  }\n\n  /**\n   * Resets the search input and filtering.\n   */\n  function _resetSearch() {\n    _searchDom.value = '';\n    _resetFilter();\n  }\n\n  /**\n   * This passes the click of the selected item button down to the label it\n   * contains. This is only required for browsers (IE11) that prevent the\n   * click of a selected item from cascading from the button down to the label\n   * it contains.\n   *\n   * @param {MouseEvent} event - The mouse click event object.\n   */\n  function _selectionClickHandler(event) {\n    const target = event.target;\n    if (target.tagName === 'BUTTON') {\n      event.preventDefault();\n      target.removeEventListener('click', _selectionClickHandler);\n      target.querySelector('label').click();\n    }\n  }\n\n  /**\n   * @param {KeyboardEvent} event - The key down event object.\n   */\n  function _selectionKeyDownHandler(event) {\n    if (event.keyCode === KEY_SPACE || event.keyCode === KEY_RETURN) {\n      const label = event.target.querySelector('label');\n      const checkbox = _optionsDom.querySelector(\n        '#' + label.getAttribute('for')\n      );\n      checkbox.click();\n    }\n  }\n\n  /**\n   * Create a unique ID based on a select's option HTML element.\n   *\n   * @param {HTMLElement} option - A option HTML element.\n   * @returns {string} A hopefully unique ID.\n   */\n  function _getOptionId(option) {\n    /* Replace any character that is not a word character with a dash.\n       https://regex101.com/r/ShHmRw/1\n    */\n    return (\n      _name + '-' + option.value.trim().replace(/[^\\w]/g, '-').toLowerCase()\n    );\n  }\n\n  /**\n   * @param {HTMLElement} selectionsDom - The UL item to inject list item into.\n   * @param {HTMLElement} option - The OPTION item to extract content from.\n   */\n  function _createSelectedItem(selectionsDom, option) {\n    const optionId = _getOptionId(option);\n    const selectionsItemDom = MultiselectUtils.create('li', {\n      'data-option': option.value,\n    });\n\n    const selectionsItemLabelDom = MultiselectUtils.create('button', {\n      type: 'button',\n      innerHTML:\n        '<label for=' + optionId + '>' + option.text + closeIcon + '</label>',\n      inside: selectionsItemDom,\n    });\n\n    selectionsDom.appendChild(selectionsItemDom);\n    selectionsItemDom.appendChild(selectionsItemLabelDom);\n\n    selectionsItemLabelDom.addEventListener('click', _selectionClickHandler);\n    selectionsItemLabelDom.addEventListener(\n      'keydown',\n      _selectionKeyDownHandler\n    );\n  }\n\n  /**\n   * Tracks a user's selections and updates the list in the dom.\n   *\n   * @param {number} optionIndex - The index position of the chosen option.\n   */\n  function _updateSelections(optionIndex) {\n    const option =\n      _model.getOption(optionIndex) || _model.getOption(_model.getIndex());\n\n    if (option) {\n      if (option.checked) {\n        if (_optionsDom.classList.contains('u-max-selections')) {\n          _optionsDom.classList.remove('u-max-selections');\n        }\n\n        const dataOptionSel = '[data-option=\"' + option.value + '\"]';\n        const _selectionsItemDom = _selectionsDom.querySelector(dataOptionSel);\n\n        if (typeof _selectionsItemDom !== 'undefined') {\n          _selectionsDom.removeChild(_selectionsItemDom);\n        }\n      } else {\n        _createSelectedItem(_selectionsDom, option);\n      }\n      _model.toggleOption(optionIndex);\n\n      if (_model.isAtMaxSelections()) {\n        _optionsDom.classList.add('u-max-selections');\n      }\n\n      _instance.dispatchEvent('selectionsUpdated', { target: _instance });\n    }\n\n    _model.resetIndex();\n    _isBlurSkipped = false;\n\n    if (_fieldsetDom.getAttribute('aria-hidden') === 'false') {\n      _searchDom.focus();\n    }\n  }\n\n  /**\n   * Handles the functions to trigger on the checkbox change.\n   *\n   * @param {Event} event - The checkbox change event.\n   */\n  function _changeHandler(event) {\n    _updateSelections(Number(event.target.getAttribute('data-index')));\n    _resetSearch();\n  }\n\n  /**\n   * Binds events to the search input, option list, and checkboxes.\n   */\n  function _bindEvents() {\n    _headerDom.addEventListener('mousemove', function (event) {\n      const target = event.target;\n      // Check if we're over the down-arrow on the right side of the input.\n      if (event.offsetX > target.offsetWidth - 35) {\n        target.style.cursor = 'pointer';\n      } else {\n        target.style.cursor = 'auto';\n      }\n    });\n\n    _headerDom.addEventListener('mouseup', function (event) {\n      const target = event.target;\n\n      /* Check if we're over the down-arrow on the right side of the input.\n         Also check if the fieldset is open.\n         35 = width of the arrow on the right of the search input.\n         140 = the max-height value set in multiselect.less for the fieldset.\n      */\n      if (\n        event.offsetX > target.offsetWidth - 35 &&\n        _fieldsetDom.offsetHeight === 140\n      ) {\n        _searchDom.blur();\n      }\n    });\n\n    _searchDom.addEventListener('input', function () {\n      _evaluate(this.value);\n    });\n\n    _searchDom.addEventListener('focus', function () {\n      if (_fieldsetDom.getAttribute('aria-hidden') === 'true') {\n        expand();\n      }\n    });\n\n    _searchDom.addEventListener('blur', function () {\n      if (\n        !_isBlurSkipped &&\n        _fieldsetDom.getAttribute('aria-hidden') === 'false'\n      ) {\n        collapse();\n      }\n    });\n\n    _searchDom.addEventListener('keydown', function (event) {\n      const key = event.keyCode;\n\n      if (\n        _fieldsetDom.getAttribute('aria-hidden') === 'true' &&\n        key !== KEY_TAB\n      ) {\n        expand();\n      }\n\n      if (key === KEY_RETURN) {\n        event.preventDefault();\n        _highlight(DIR_NEXT);\n      } else if (key === KEY_ESCAPE) {\n        _resetSearch();\n        collapse();\n      } else if (key === KEY_DOWN) {\n        _highlight(DIR_NEXT);\n      } else if (\n        key === KEY_TAB &&\n        !event.shiftKey &&\n        _fieldsetDom.getAttribute('aria-hidden') === 'false'\n      ) {\n        collapse();\n      }\n    });\n\n    _optionsDom.addEventListener('mousedown', function () {\n      _isBlurSkipped = true;\n    });\n\n    _optionsDom.addEventListener('keydown', function (event) {\n      const key = event.keyCode;\n      const target = event.target;\n      const checked = target.checked;\n\n      if (key === KEY_RETURN) {\n        event.preventDefault();\n\n        /* Programmatically checking a checkbox does not fire a change event\n        so we need to manually create an event and dispatch it from the input.\n        */\n        target.checked = !checked;\n        const evt = document.createEvent('HTMLEvents');\n        evt.initEvent('change', false, true);\n        target.dispatchEvent(evt);\n      } else if (key === KEY_ESCAPE) {\n        _searchDom.focus();\n        collapse();\n      } else if (key === KEY_UP) {\n        _highlight(DIR_PREV);\n      } else if (key === KEY_DOWN) {\n        _highlight(DIR_NEXT);\n      }\n    });\n\n    _fieldsetDom.addEventListener('mousedown', function (event) {\n      if (event.target.tagName === 'LABEL') {\n        _isBlurSkipped = true;\n      }\n    });\n\n    const inputs = _optionsDom.querySelectorAll('input');\n    for (let i = 0, len = inputs.length; i < len; i++) {\n      inputs[i].addEventListener('change', _changeHandler);\n    }\n\n    // Add event listeners to any selections that are present at page load.\n    const labelButtons = _selectionsDom.querySelectorAll('button');\n    for (let j = 0, len = labelButtons.length; j < len; j++) {\n      labelButtons[j].addEventListener('click', _selectionClickHandler);\n      labelButtons[j].addEventListener('keydown', _selectionKeyDownHandler);\n    }\n  }\n\n  /**\n   * Populates and injects the markup for the custom multiselect.\n   *\n   * @returns {HTMLElement} Newly created <div> element to hold the multiselect.\n   */\n  function _populateMarkup() {\n    // Add a container for our markup\n    _containerDom = MultiselectUtils.create('div', {\n      className: BASE_CLASS,\n      around: _dom,\n    });\n\n    // Create all our markup but wait to manipulate the DOM just once\n    _selectionsDom = MultiselectUtils.create('ul', {\n      className: BASE_CLASS + '_choices',\n      inside: _containerDom,\n    });\n\n    _headerDom = MultiselectUtils.create('header', {\n      className: BASE_CLASS + '_header',\n    });\n\n    _searchDom = MultiselectUtils.create('input', {\n      className: BASE_CLASS + '_search ' + TEXT_INPUT_CLASS,\n      type: 'text',\n      placeholder: _placeholder || 'Select up to five',\n      inside: _headerDom,\n      id: _dom.id,\n      autocomplete: 'off',\n    });\n\n    _fieldsetDom = MultiselectUtils.create('fieldset', {\n      className: BASE_CLASS + '_fieldset u-invisible',\n      'aria-hidden': 'true',\n    });\n\n    let optionsClasses = BASE_CLASS + '_options';\n    if (_model.isAtMaxSelections()) {\n      optionsClasses += ' u-max-selections';\n    }\n\n    _optionsDom = MultiselectUtils.create('ul', {\n      className: optionsClasses,\n      inside: _fieldsetDom,\n    });\n\n    let option;\n    let optionId;\n    let isChecked;\n    for (let i = 0, len = _options.length; i < len; i++) {\n      option = _options[i];\n      optionId = _getOptionId(option);\n      isChecked = _model.getOption(i).checked;\n      const optionsItemDom = MultiselectUtils.create('li', {\n        'data-option': option.value,\n        'data-cy': 'multiselect-option',\n        class: 'm-form-field m-form-field__checkbox',\n      });\n\n      MultiselectUtils.create('input', {\n        id: optionId,\n        // Type must come before value or IE fails\n        type: 'checkbox',\n        value: option.value,\n        name: _name,\n        class: CHECKBOX_INPUT_CLASS + ' ' + BASE_CLASS + '_checkbox',\n        inside: optionsItemDom,\n        checked: isChecked,\n        'data-index': i,\n      });\n\n      MultiselectUtils.create('label', {\n        for: optionId,\n        textContent: option.text,\n        className: BASE_CLASS + '_label a-label',\n        inside: optionsItemDom,\n      });\n\n      _optionItemDoms.push(optionsItemDom);\n      _optionsDom.appendChild(optionsItemDom);\n\n      if (isChecked) {\n        _createSelectedItem(_selectionsDom, option);\n      }\n    }\n\n    // Write our new markup to the DOM.\n    _containerDom.appendChild(_headerDom);\n    _containerDom.appendChild(_fieldsetDom);\n\n    return _containerDom;\n  }\n\n  /**\n   * Set up and create the multiselect.\n   *\n   * @returns {Multiselect} An instance.\n   */\n  function init() {\n    if (!setInitFlag(_dom)) {\n      return this;\n    }\n\n    if (isMobileUserAgent()) {\n      return this;\n    }\n\n    _instance = this;\n    _name = _dom.name || _dom.id;\n    _placeholder = _dom.getAttribute('placeholder');\n    _options = _dom.options || [];\n\n    if (_options.length > 0) {\n      _model = new MultiselectModel(_options, _name).init();\n      const newDom = _populateMarkup();\n\n      /* Removes <select> element,\n         and re-assign DOM reference. */\n      _dom.parentNode.removeChild(_dom);\n      _dom = newDom;\n\n      /* We need to set init flag again since we've created a new <div>\n         to replace the <select> element. */\n      setInitFlag(_dom);\n\n      _bindEvents();\n    }\n\n    return this;\n  }\n\n  // Attach public events.\n  this.init = init;\n  this.expand = expand;\n  this.collapse = collapse;\n\n  const eventObserver = new EventObserver();\n  this.addEventListener = eventObserver.addEventListener;\n  this.removeEventListener = eventObserver.removeEventListener;\n  this.dispatchEvent = eventObserver.dispatchEvent;\n\n  return this;\n}\n\nMultiselect.BASE_CLASS = BASE_CLASS;\n\nexport default Multiselect;\n","// Undefined return value for void methods.\nlet UNDEFINED;\n\n// How many options may be checked.\nconst MAX_SELECTIONS = 5;\n\n/**\n * Escapes a string.\n *\n * @param {string} str - The string to escape.\n * @returns {string} The escaped string.\n */\nfunction stringEscape(str) {\n  return str.replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\n/**\n * Tests whether a string matches another.\n *\n * @param   {string}  x - The control string.\n * @param   {string}  y - The comparison string.\n * @returns {boolean}   True if `x` and `y` match, false otherwise.\n */\nfunction stringMatch(x, y) {\n  return RegExp(stringEscape(y.trim()), 'i').test(x);\n}\n\n/**\n * @class\n * MultiselectModel\n * @param {HTMLOptionsCollection} options -\n *   Set of options from a <select> element.\n * @param {string} name - a unique name for this multiselect.\n */\nfunction MultiselectModel(options, name) {\n  const _options = options;\n  const _name = name;\n  let _optionsData = [];\n\n  let _selectedIndices = [];\n  let _filterIndices = [];\n\n  /* When the options list is filtered, we store a list of filtered indices\n  so that when the filter changes we can reset the last matched options. */\n  let _lastFilterIndices = [];\n\n  // Which option is in focus. -1 means the focus is on the search input.\n  let _index = -1;\n\n  /**\n   * @param {HTMLElement} item - An option HTML node.\n   * @returns {string} A (hopefully) unique ID.\n   *   If it's not unique, we have a duplicate option value.\n   */\n  function _getOptionId(item) {\n    return _name + '-' + item.value.trim().replace(/\\s+/g, '-').toLowerCase();\n  }\n\n  /**\n   * @returns {boolean}\n   *   True if the maximum number of options are checked, false otherwise.\n   */\n  function isAtMaxSelections() {\n    return _selectedIndices.length === MAX_SELECTIONS;\n  }\n\n  /**\n   * Cleans up a list of options for saving to memory.\n   *\n   * @param {HTMLOptionsCollection} list - The options from a select element.\n   * @returns {Array} An array of option objects.\n   */\n  function _formatOptions(list) {\n    let item;\n    const cleaned = [];\n\n    let isChecked = false;\n    for (let i = 0, len = list.length; i < len; i++) {\n      item = list[i];\n      isChecked = isAtMaxSelections() ? false : item.defaultSelected;\n      cleaned.push({\n        id: _getOptionId(item),\n        value: item.value,\n        text: item.text,\n        checked: isChecked,\n      });\n\n      // If an option is initially checked, we need to record it.\n      if (isChecked) {\n        _selectedIndices.push(i);\n      }\n    }\n\n    return cleaned;\n  }\n\n  /**\n   * @returns {MultiselectModel} An instance.\n   */\n  function init() {\n    _optionsData = _formatOptions(_options);\n\n    return this;\n  }\n\n  /**\n   * Toggle checked value of an option.\n   *\n   * @param {number} index - The index position of the option in the list.\n   * @returns {boolean} A value of true is checked and false is unchecked.\n   */\n  function toggleOption(index) {\n    _optionsData[index].checked = !_optionsData[index].checked;\n\n    if (\n      _selectedIndices.length < MAX_SELECTIONS &&\n      _optionsData[index].checked\n    ) {\n      _selectedIndices.push(index);\n      _selectedIndices.sort();\n\n      return true;\n    }\n    // We're over the max selections, reverse the check of the option.\n    _optionsData[index].checked = false;\n    _selectedIndices = _selectedIndices.filter(function (currIndex) {\n      return currIndex !== index;\n    });\n\n    return false;\n  }\n\n  /**\n   * Utility function for Array.reduce() used in searchIndices.\n   *\n   * @param {Array} aggregate - The reducer's accumulator.\n   * @param {object} item - Each item in the collection.\n   * @param {number} index - The index of item in the collection.\n   * @param {string} value - The value of item in the collection.\n   * @returns {Array} The reducer's accumulator.\n   */\n  function _searchAggregator(aggregate, item, index, value) {\n    if (stringMatch(item.text, value)) {\n      aggregate.push(index);\n    }\n    return aggregate;\n  }\n\n  /**\n   * Search for a query string in the options text and return the indices of\n   * the matching positions in the options array.\n   *\n   * @param {string} query - A query string.\n   * @returns {Array} List of indices of the matching entries from the options.\n   */\n  function filterIndices(query) {\n    // Convert query to a string if its not.\n    if (Object.prototype.toString.call(query) !== '[object String]') {\n      query = '';\n    }\n    _lastFilterIndices = _filterIndices;\n    if (_optionsData.length > 0) {\n      _filterIndices = _optionsData.reduce(function (acc, item, index) {\n        return _searchAggregator(acc, item, index, query);\n      }, []);\n    }\n    // Reset index position.\n    _index = -1;\n\n    return _filterIndices;\n  }\n\n  /**\n   * Retrieve an option object from the options list.\n   *\n   * @param {number} index - The index position in the options list.\n   * @returns {object} The option object with text, value, and checked value.\n   */\n  function getOption(index) {\n    return _optionsData[index];\n  }\n\n  /**\n   * Set the index of the collection (represents the highlighted option).\n   *\n   * @param {number} value - The index to set.\n   */\n  function setIndex(value) {\n    const filterCount = _filterIndices.length;\n    const count = filterCount === 0 ? _optionsData.length : filterCount;\n    if (value < 0) {\n      _index = -1;\n    } else if (value >= count) {\n      _index = count - 1;\n    } else {\n      _index = value;\n    }\n  }\n\n  /**\n   * @returns {number} The current index (highlighted option).\n   */\n  function getIndex() {\n    return _index;\n  }\n\n  this.init = init;\n\n  // This is used to check an item in the collection.\n  this.toggleOption = toggleOption;\n  this.getSelectedIndices = function () {\n    return _selectedIndices;\n  };\n  this.isAtMaxSelections = isAtMaxSelections;\n\n  // This is used to search the items in the collection.\n  this.filterIndices = filterIndices;\n  this.clearFilter = function () {\n    _filterIndices = _lastFilterIndices = [];\n    return UNDEFINED;\n  };\n  this.getFilterIndices = function () {\n    return _filterIndices;\n  };\n  this.getLastFilterIndices = function () {\n    return _lastFilterIndices;\n  };\n\n  // These are used to highlight items in the collection.\n  this.getIndex = getIndex;\n  this.setIndex = setIndex;\n  this.resetIndex = function () {\n    _index = -1;\n    return _index;\n  };\n\n  // This is used to retrieve items from the collection.\n  this.getOption = getOption;\n\n  return this;\n}\n\nexport default MultiselectModel;\n","import { queryOne } from '@cfpb/cfpb-atomic-component/src/utilities/dom-traverse.js';\n\n/**\n * Shortcut for creating new dom elements.\n *\n * @param {string} tag - The html elem to create.\n * @param {object} options - The options for building the elem.\n * @returns {HTMLElement} The created elem.\n */\nfunction create(tag, options) {\n  const elem = document.createElement(tag);\n\n  let i;\n  for (i in options) {\n    if ({}.hasOwnProperty.call(options, i)) {\n      const val = options[i];\n      let ref;\n\n      if (i === 'inside') {\n        ref = queryOne(val);\n        ref.appendChild(elem);\n      } else if (i === 'around') {\n        ref = queryOne(val);\n        ref.parentNode.insertBefore(elem, ref);\n        elem.appendChild(ref);\n      } else if (i in elem) {\n        elem[i] = val;\n      } else {\n        elem.setAttribute(i, val);\n      }\n    }\n  }\n\n  return elem;\n}\n\nexport default {\n  create: create,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { toggleAllDetails, toggleDetails } from './toggle-details.js';\nimport AnchorJS from 'anchor-js';\nimport Expandable from '@cfpb/cfpb-expandables/src/Expandable.js';\nimport Multiselect from '@cfpb/cfpb-forms/src/organisms/Multiselect.js';\nimport AlphaTransition from '@cfpb/cfpb-atomic-component/src/utilities/transition/AlphaTransition.js';\nimport MoveTransition from '@cfpb/cfpb-atomic-component/src/utilities/transition/MoveTransition.js';\nimport MaxHeightTransition from '@cfpb/cfpb-atomic-component/src/utilities/transition/MaxHeightTransition.js';\nimport Tabs from './Tabs.js';\nimport redirectBanner from './redirect-banner.js';\nimport sidebar from './sidebar.js';\n\nredirectBanner.init();\nsidebar.init();\n\nconst anchors = new AnchorJS();\n// Add anchors to all headings (except page title headings)\nanchors.add('h2:not(.title), h3, h4, h5');\n// Ensure there are no anchors in inconvenient places\nanchors.remove(`\n  .a-live_code h2,\n  .a-live_code h3,\n  .a-live_code h4,\n  .a-live_code h5,\n  .o-expandable_label,\n  #search-results h3\n`);\n\nconst multiselectDom = document.querySelector('.o-multiselect');\nif (multiselectDom) {\n  const multiselect = new Multiselect(multiselectDom);\n  multiselect.init();\n}\n\nExpandable.init();\n\n// Exporting these classes to the window so that the transition-patterns.md\n// page can use them in its code snippets.\nwindow.AlphaTransition = AlphaTransition;\nwindow.MoveTransition = MoveTransition;\nwindow.MaxHeightTransition = MaxHeightTransition;\n\n// Tabs show under the show/hide details button on a pattern.\nconst tabsContainerDom = document.querySelectorAll(`.${Tabs.BASE_CLASS}`);\nif (tabsContainerDom.length > 0) {\n  let tabsInst;\n  for (let i = 0, len = tabsContainerDom.length; i < len; i++) {\n    tabsInst = new Tabs(tabsContainerDom[i]);\n    tabsInst.init();\n  }\n}\nconst toggleAllBtn = document.querySelector('#toggle-details');\nconst toggleBtns = document.querySelectorAll('.a-toggle_code button');\n\n/**\n * @param {MouseEvent} event - The mouse event object from the click.\n */\nfunction handleToggleAllClick(event) {\n  event.preventDefault();\n  toggleAllDetails(toggleAllBtn);\n}\n\n/**\n * @param {MouseEvent} event - The mouse event object from the click.\n */\nfunction handleToggleClick(event) {\n  const target = event.target;\n  toggleDetails(target);\n}\n\nif (toggleAllBtn) {\n  toggleAllBtn.addEventListener('click', handleToggleAllClick, false);\n\n  if (window.localStorage.getItem('toggleState') === 'hide') {\n    toggleAllDetails(toggleAllBtn);\n  }\n}\n\nfor (let i = 0, len = toggleBtns.length; i < len; i++) {\n  toggleBtns[i].addEventListener('click', handleToggleClick, false);\n}\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":["BASE_CLASS","Tabs","dom","_dom","_tabsItemsDom","_tabsPanelsDom","_selectedTabIndex","changeTab","index","classList","remove","add","init","querySelectorAll","length","i","len","addEventListener","event","preventDefault","getSource","match","redirectSources","capitalframework","name","url","designmanual","displayBanner","sourceName","sourceUrl","banner","document","querySelector","sourceNames","links","textContent","href","locationSearch","window","location","search","source","secondaryNavCat","windowWidth","innerWidth","removeAttribute","handleViewportChange","setAttribute","HIDDEN_CLASS","TOGGLE_ATTRIBUTE","STATE_SHOW","STATE_HIDE","isShowingAllDetails","toggleDetails","button","state","container","parentNode","codeEl","getAttribute","hideCodeBtn","showCodeBtn","contains","toggleAllDetails","toggleBtn","innerHTML","localStorage","setItem","codeEls","buttonElm","AnchorJS","Expandable","Multiselect","AlphaTransition","MoveTransition","MaxHeightTransition","redirectBanner","sidebar","anchors","multiselectDom","multiselect","tabsContainerDom","tabsInst","toggleAllBtn","toggleBtns","handleToggleAllClick","handleToggleClick","target","getItem"],"sourceRoot":""}